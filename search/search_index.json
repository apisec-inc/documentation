{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"APIsec Overview","text":""},{"location":"#discover-apisec","title":"Discover APIsec","text":"<p><code>Reading time 1 min</code></p> <p>The Only 100% Automated <code>API</code> Testing Platform.  APIsec automatically creates and runs thousands of test cases tailored to your unique API architecture - integrated directly into your workflow.</p> <p>Instantly secure APIs in Apigee, Azure, AWS &amp; more with <code>API Gateway</code>.</p> <p><code>Scanners</code>!  APIsec Scanner is a light-weight Docker container which receives tasks from the APIsec control-plane over SSL.  These scanners run playbooks/security tests.</p> <p><code>Vault</code> allows you to securely store and use API keys and credentials, tokens, passwords, and key-value pairs.  APIsec Vault is like a password manager that stores all your credentials securely and provides read-only access to test playbooks.</p> <p>Create and update new and existing <code>Security Categories</code> to remediate/test new and emerging security threats.</p> <p>Your organization\u2019s security is presented in graphical and statistical formats for better visibility in the <code>Dashboard</code>.</p> <p>Let\u2019s get started!  Btw, once you register your API, it will appear under the Project section below the content tiles.</p> <p></p>"},{"location":"2fa/","title":"Two Factor Authentication Setup","text":"<p><code>Reading time 3 min</code></p> <p>Two factor authentication (2FA) allows you to increase the security of your APIsec account which allows the users to authenticate themselves with a two-step process.  This authentication layers makes it harder for the hackers to attack your account.</p>"},{"location":"2fa/#steps","title":"Steps","text":"<p>For the 2FA, it's a 2 step process to activate it</p>"},{"location":"2fa/#steps-for-the-admin","title":"Steps for the Admin","text":"<ul> <li>First, the admin needs to enable the 2FA from the Accounts under the name menu</li> </ul> <ul> <li>Then, an email will be sent out to the users</li> </ul>"},{"location":"2fa/#steps-for-the-users","title":"Steps for the Users","text":"<ul> <li>Now, the the user will have to enable it from the My Profile menu option </li> </ul> <ul> <li>A QR code will be shown &gt; Scan it using the app on the phone and </li> </ul> <ul> <li>Click Save</li> <li>Note: Ensure that the setup is successful and the code is getting generated</li> </ul>"},{"location":"2fa/#certified-applications-on-ios","title":"Certified Applications on IOS","text":"<ul> <li>Twilio - Authy and</li> <li>Microsoft Authenticator</li> </ul>"},{"location":"2fa/#certified-applications-on-android","title":"Certified Applications on Android","text":"<ul> <li>Twilio - Authy</li> <li>Microsoft Authenticator and</li> <li>Google Authenticator</li> </ul>"},{"location":"2fa/#troubleshooting","title":"Troubleshooting","text":"<p>Check MFA Settings and Configuration: Ensure that the MFA settings for the affected users are configured correctly and consistently with those of the users for whom MFA is working. Verify that the time settings on their devices are synchronized.</p> <p>MFA App Compatibility: Different MFA apps might have slight variations in how they generate codes. Ensure that the users are using recommended and tested MFA apps. Authenticator apps like Google Authenticator, Authy, or Microsoft Authenticator are commonly used and usually reliable.</p> <p>Time Synchronization: MFA codes are time-based. If the user's device has an incorrect time setting, the generated codes won't match the server's expectations. Ensure that the time zone and time settings are correct on the user's device.</p> <p>Account Lockouts: APISec has account lockout policies that trigger after a certain number of failed MFA attempts. Check if the affected accounts are locked out due to repeated incorrect MFA attempts.</p> <p>Device-Specific Issues: If the issue seems to be isolated to specific devices, it might be worth investigating if there are any device-specific settings or software conflicts causing the problem.</p> <p>Software Updates: Ensure that both the MFA app and the device's operating system are up to date. Sometimes, updating these components can resolve compatibility issues.</p>"},{"location":"APIGroups/","title":"API Groups","text":"<p>API Groups are a way to bundle together API projects into a group that is appropriate for your organization. In this first version, the use of API groups is for managing collaborators. on projects without having to do this one at a time.</p> <p></p> <p>In order to create a group, click the New API group button and then give a Group Name and Description. Utilize the button on the right to select the API's that should be part of this group.  You are then able to either add a list of teams that should have Collaborator access to the API projects that are part of the group - or leave this entry blank to be filled in later.</p> <p></p>"},{"location":"APIsec%20CLI/","title":"Scan APIs locally with APIsec CLI","text":"Scan APIs locally with APIsec CLI  <p> By Mohammed Luqman Shareef  on March 23,2021 </p>"},{"location":"APIsec%20CLI/#scan-local-apis-to-find-vulnerabilities-with-apisec-cli","title":"Scan local APIs to find vulnerabilities with APIsec CLI","text":""},{"location":"APIsec%20CLI/#1-installation","title":"1. Installation","text":"<p>To download and run apisec-cli, please run the following</p> <p>git clone https://github.com/intesar/apisec-clicd apisec-clijava -jar apisec-cli.jar</p>"},{"location":"APIsec%20CLI/#2-signup-with-apisec","title":"2. Signup with APIsec","text":"<p>For the new users, you need to sign-up with APIsec. It creates a new tenant for you in the APIsec SaaS Platform.</p> <p>Command: signup \u2013c  -e</p> <p>apisec&gt; signup -c mycompany -e john@mycompany.com</p> <p>It returns the login credentials, i.e., the user name and an auto generated password. Save these in a file called fx.properties at the location specified. Upon next execution, you\u2019ll be automatically logged-in to your tenant.</p> <p>Alternatively, you can keep the password with you, and when you execute the script next time you need to manually login using the below command.</p> <p>Command: login \u2013u  -p</p> <p>apisec&gt; login \u2013u john@mycompany.com -p DBhk20Al</p>"},{"location":"APIsec%20CLI/#3-register-apis","title":"3. Register APIs","text":"<p>Register the API that you wish to scan by providing its publicly available Open API Spec URL i.e.,</p> <p>swagger url for e.g., http://mycompany.com/application/v2/api-docs</p> <p>Command: register \u2013n  -o</p> <p>apisec&gt; register \u2013n orders -o http://mycompany.com/orders/v2/api/docs</p> <p>APIsec parses the specs and generates the security playbooks for scanning. This might take a few seconds  depending on the number of endpoints in the API.</p> <p>If your application is hosted internally and the OAS Url is not available publicly, APIsec recommends  you to upload the OAS file in json/yaml format to any public location like github and provide its direct url.</p> <p>Note: You can register multiple APIs in the same tenant by repeating the above step. Use \u2018ls\u2019 command  to view the list of all the registered APIs with APIsec</p> <p>Command: ls</p> <p>apisec&gt; ls</p>"},{"location":"APIsec%20CLI/#4-scan-the-api","title":"4. Scan the API","text":"<p>To scan the API for vulnerabilities, use the scan command as below.</p> <p>Command: scan \u2013n &lt; api name&gt;</p> <p>apisec&gt; scan \u2013n orders</p> <p>It runs all the playbooks generated in the above step, which invokes the endpoints at the application  hosted (the host url and the basepath provided in the OAS Specs).</p> <p>If the application is hosted internally and no public IP is available, you need to scan using your  local scanner. The steps to create a local scanner are available in the next section.</p>"},{"location":"APIsec%20CLI/#5-create-a-local-scanner","title":"5. Create a local scanner","text":"<p>If the application is hosted internally and no public IP is available, you need to deploy a local scanner to invoke.</p> <p>Command: scanner create \u2013n</p> <p>apisec&gt; scanner create \u2013n MyLocalScanner</p> <p>Command: scan \u2013n  -s</p> <p>apisec&gt; scan \u2013n orders \u2013s MyLocalScanner</p> <p>This command returns the docker and kubernetes scripts to deploy the scanner. Run the docker or  kubernetes script as per your environment setup on the same machine where the API is hosted or  any other machine in the network which can access the APIs. The script It will deploy the scanner in that machine.</p> <p>Use the below commands to view the list of all local scanners created in your tenant.</p> <p>Command: scanner ls</p> <p>apisec&gt; scanner ls</p> <p>Use the below commands to remove the local scanner in your tenant. Command: scanner rm -n</p> <p>apisec&gt; scanner rm -n MyLocalScanner</p>"},{"location":"AddAPIFromAWSGateway/","title":"How to programmatically register API\u2019s from AWS Gateway","text":"<p>Depending on your development/deployment process, it may be easier to register API\u2019s within APIsec using a script rather than the UI.  In order to make that easier, there is a pre-written script that is located here.</p> <p>In order to use the script, there are a few steps/prerequisites.</p> <ol> <li>Install the AWS CLI. https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html</li> <li>Generate an AWS Secret-key and Access-key</li> </ol> <p>Once you have the prerequisites done and your key information, you can use the script in the following manner.</p> <p><code>#Syntax: bash api-gateway-registration.sh --host \"\" --username \"\" --password \"\" --accesskey \"&amp;lt;ACCESS_KEY&gt;\" --secretkey \"&amp;lt;SECRET_KEY&gt;\" --name \"\" --accountType \"&amp;lt;ACCOUNT_TYPE&gt;\" --region \"\"</code></p> <p><code>#Example usage: bash api-gateway-registration.sh --host \"https://cloud.apisec.ai\" --username \"admin@apisec.ai\" --password \"xxxxxx\" --accesskey \"xxxxxxx\" --secretkey \"xxxxxxxxx\" --name \"Testing\" --accountType \"AWS_API_GATEWAY\" --region \"us-east-1\"</code></p>"},{"location":"AddingEndpointsManually/","title":"Add Endpoints via UI","text":"<p>Adding endpoints to an existing project</p> <p>Although endpoints are added at the time of registering an API, you can still add these manually. This document outlines step-be-step to add that.</p> <p>From the homepage find for a previously created project where you need to add more endpoints. Open that project and click on the Endpoints tile. </p> <p></p> <p>On the top right corner of the page, click on the Add Endpoints button.</p> <p></p> <p>In the Popup &gt; Add the endpoint along with its method, for example: post:/api/v1/addAccount/sample &gt; Before you Save, keeping the checkbox checked will scan these specific endpoint against different categories.</p> <p></p> <p>Observe the newly endpoint and a tag is added to identify the manual entries.</p> <p></p> <p>Go to the Dashboard of the project &gt; Observe the endpoint count has been increased now.  The Playbooks will also be generating</p> <p></p> <p>Run Scan if you haven\u2019t already in the previous screen.</p> <p>More information about the dashboard can be found here. </p>"},{"location":"Authentication/","title":"General Authentication Related Information","text":"<p><code>Reading time 12 min</code></p>"},{"location":"Authentication/#api-authentication-options","title":"API Authentication Options","text":"<p>API authentication is the process of verifying that a user or application is authorized to access an API. There are many different API authentication options available, each with its own strengths and weaknesses. The APIsec platform provides a flexible mechanism to enable customers to authenticate to a large variety of APIs, regardless of the chosen implementation.</p>"},{"location":"Authentication/#api-keys","title":"API Keys","text":"<p>API keys are secret tokens that are used to identify an application and grant it access to an API. They are typically generated by the API provider and given to the application developer. API keys are simple to use and implement, but they are also vulnerable to theft, as anyone who has the key can access the API.</p>"},{"location":"Authentication/#oauth-20","title":"OAuth 2.0","text":"<p>OAuth 2.0 is an authorization framework that enables applications to obtain limited access to user accounts. It works by delegating user authentication to the service that hosts the user account, and authorizing third-party applications to access the user account. </p>"},{"location":"Authentication/#authentication-options-supported-in-apisec","title":"Authentication Options Supported in APIsec","text":"<p>APIsec supports a multitude of HTTP authentication schemes and options for authenticating users to web servers. The following authentication options are available in the \"Environments\" coniguration screen: </p> <p></p>"},{"location":"Authentication/#1-basic-authentication","title":"1. Basic Authentication","text":"<p>Basic authentication is the most basic form of HTTP authentication. It sends the user's username and password in plain text over the network. APIsec configuration looks like this:</p> <p></p>"},{"location":"Authentication/#2-bearer-authentication","title":"2. Bearer Authentication","text":"<p>Bearer authentication is a more secure form of HTTP authentication. It uses an access token to authenticate the user. The access token is a string of characters that is generated by the API provider and given to the application developer. The application then includes the access token in the Authorization header of each API request. APIsec configuration looks like this:</p> <p></p>"},{"location":"Authentication/#3-jwt-authentication-json-web-token","title":"3. JWT Authentication (JSON Web Token)","text":"<p>JWT authentication is a popular way to authenticate users and applications. It uses JSON Web Tokens (JWTs) to represent the user's identity and authorization claims. JWTs are signed by the API provider, which ensures that they are tamper-proof. JWTs are also self-contained, which means that they can be verified without making a request to the API provider. These tokens typically expire within a predetermined amount of time and therefore need to be refreshed regulary. APIsec configuration looks like this:</p> <p></p>"},{"location":"Authentication/#4-oauth-20-authentication","title":"4. OAuth 2.0 Authentication","text":"<p>OAuth 2.0 is a popular option and the configuration settings look like this:</p> <p></p>"},{"location":"Authentication/#5-multi-step-authentication","title":"5. Multi Step Authentication","text":"<p>A combination of several steps, where each step follows a specific path to ultimately retrieve authorization to access the API. Often the most flexible authentication option, the APIsec platform empowers customers to create and execute these steps in a script that returns the necessary keys. The image below shows how this is configured in APIsec:</p> <p></p> <p>Example Header:</p> <pre><code>  Authorization: Bearer {{@Cmd | /tmp/Custom_Auth.sh UserA [[@Vault.UserA/Password]] }}\n</code></pre> <p>Note: The \"Custom_Auth.sh\" example script takes two input parameters, the username \"UserA\", and the vaulted password associated with the UserA user. The bearer token that is returned by the script is then replaced in the header.</p>"},{"location":"Authentication/#6-authentication-in-the-request-body-less-common","title":"6. Authentication in the Request Body (Less Common)","text":"<p>Steps to configure authentication in the request body</p> <p>In most APIs, authentication credentials are submitted in the request header. However, some APIs may require credentials such as an authentication Key or a token or a session ID in the request body.</p> <p>Here are the steps to configure credentials in the request body:</p> <ol> <li> <p>Use existing authentication to configure credentials. Using the curl command, you may generate a dynamic token or use a static token to assign it to a header name such as Authorization or authenticationKey.  Please refer to this documentation for more information on generating dynamic tokens: https://docs.apisec.ai/Token%20Generation%20Code/ </p> </li> <li> <p>Depending on the credentials used in the playbooks, the credentials are substituted automatically in the request headers.</p> </li> <li> <p>Now, we can refer to these headers substituted in the request body and update the payload section. Navigate to the configurations, payloads, and Default tab and update the field in the request body that requires a token or an authentication key with the following syntax:</p> <p>{      \"authenticationKey\": \"{{@RequestHeaders.authenticationKey}}\"   }</p> </li> </ol> <p>Note: The authenticationKey is the header name we defined in Step 1.</p> <ol> <li> <p>Lock and save the payload and regenerate playbooks.</p> </li> <li> <p>For ABAC, configure UserA and UserB credentials and update the payload within the same category, and regenerate playbooks.</p> </li> <li> <p>In the case of static tokens or keys, we can create variables with the following notation:</p> </li> </ol> <p>UserB.authenticationKey, and UserC.authenticationKey. Use the following syntax in the payload: {{@Var.authenticationKey}}. APIsec automatically substitutes the appropriate authenticationKey when executing a playbook using UserB or UserC credentials.</p>"},{"location":"Authentication/#authentication-troubleshooting","title":"Authentication Troubleshooting","text":""},{"location":"AzureSSOConfig/","title":"How to Configure AZURE SSO for APIsec","text":""},{"location":"AzureSSOConfig/#contents","title":"Contents","text":"<p>Configuration Steps     Tutorial</p>"},{"location":"AzureSSOConfig/#configuration-steps2","title":"Configuration Steps(2)","text":"<ol> <li> <p>Actions to Perform to setup  AZURE AD : </p> <ul> <li>Sign in to the Azure portal. (https://portal.azure.com).  </li> <li>If you have access to multiple tenants, in the top menu, use the Directory + subscription filter to select the tenant in which you want to register an application (OR) Search for and select Azure Active Directory.   </li> <li>Under Manage, select App registrations &gt; New registration.</li> </ul> <p></p> <ul> <li>In the Register an application page that appears, enter your application's registration information.  <ul> <li>In the Name section, enter a meaningful application name that will be displayed to users of the app.</li> <li>Under Supported account types, select an option.(Multitenant / Single Tenant)</li> <li>In the Redirect URI section, select Web in the combo-box and enter the redirect URI of your web application. This is the URI where your application wants to handle the authentication response after the user signs in. For now, enter the following redirect URI : https://cloud.apisec.ai/auth/redirect.</li> </ul> </li> </ul> </li> </ol> <p></p> <pre><code>    - Select Register to create the application.\n    - In the app's registration screen, find and note the Application (client) ID and Directory (tenant) ID.\n</code></pre> <p></p> <pre><code>     - In the app's registration screen, click on the Certificates &amp; secrets blade in the left to open the page to generate secrets. In the Client secrets section, click on New client secret :\n        - Type a key description.\n        - Select one of the available key durations.\n        - The generated key value will be displayed when you click the Add button. Copy the generated value for use in the steps later. This key value will not be displayed again, and is not retrievable by any other means, so make sure to note it from the Azure portal before navigating to any other screen.\n</code></pre> <p></p> <pre><code>- Insert Application (client) ID , Directory (tenant) ID and key value in the APIsec portal and copy the generated Azure Home URL for further configuration of Azure AD application.\n</code></pre> <ol> <li> <p>Actions to Perform at APIsec: </p> <pre><code>- Login to APIsec with the organization Admin account at https://cloud.apisec.ai\n</code></pre> <p></p> <pre><code>- Click on the Integrations Tile.\n</code></pre> <p></p> <pre><code>- Click on SSO Tile and Select SSO Type as AZURE from the Dropdown.\n</code></pre> <p></p> <pre><code>- On the SSO Settings tab, enter Secret Code(key value), Client-ID and Tenant Id  from the Application Created on Azure AD.\n- Copy the Azure Home URL and redirect to https://portal.azure.com (Cont. step:1.8)\n    - App registrations &gt;Select the Created App.\n    - Under Manage select Branding &amp; properties\n    - Insert Home page URL (Azure Home URL) copied from APIsec &amp; Save.\n</code></pre> <p></p> <pre><code>- Click on the Authentication blade under Manage.\n- Select Both the Tokens and Save.\n</code></pre> <p></p> <pre><code>- Click on API Permissions blade under Manage.\n- Add API / Permissions (name = User.Read), if not added.\n- Grant admin consent to the API / Permissions.\n    - Note : Can only be done by Global Admin.\n</code></pre> <p></p> <pre><code>- Add app roles. Currently, we offer support for the following roles. Please note that these are **case sensitive**. Create the following roles in your system:\n    - ADMIN\n    - PROJECT_MANAGER\n    - USER\n</code></pre> <p></p> <p></p> <p></p> <pre><code>- Owners can be added at the Owners section below App roles, if required.\n</code></pre> <p></p> </li> </ol> <p></p> <pre><code>    - Redirect to Azure Active Directory Home page &gt;  Manage &gt; Enterprise Applications. \n    - Search and Select the created application.\n</code></pre> <p></p> <pre><code>    - Under Manage select Properties blade.\n    - Click \u201cYes\u201d for \u2018Assignment required?\u2019 And \u2018Visible to users?\u2019 and Save .\n</code></pre> <p></p> <pre><code>    - Under Manage Select \u2018Users and groups\u2019 .\n    - Click on \"Add Users/Groups\" to assign them to the application, then select the desired role you wish to provide. If you do not add a role, then the user will not be able to login to APIsec.\n    - **IMPORTANT NOTE:** At this time, we only support adding USERS to the application and not adding GROUPS to the application.\n</code></pre> <p></p> <p></p> <p></p> <pre><code>    -  Go To https://myapplications.microsoft.com/\n    - Click on the created Application and you should be redirected to APIsec portal.\n</code></pre> <p></p> <p>Note: AD Groups not supported</p> <p>Tutorial</p> <p>For a comprehensive visual guide on configuring Azure AD with APIsec, we have prepared a helpful Video tutorial. In this video, you'll learn step-by-step instructions on setting up the integration between Azure AD and APIsec</p>"},{"location":"Call%20APIsec%20APIs/","title":"How to Call APIsec APIs","text":"How to Call APIsec APIs"},{"location":"Call%20APIsec%20APIs/#step-1-register-a-new-user-account","title":"Step 1: Register A New User Account","text":"<p>Note: Avoid using personal credentials when accessing APIsec APIs. Instead, register a new user and grant an appropriate role in Apisec\u2122 UI and entitle this account to required projects by adding them as collaborators under the Configurations, Details tab.</p>"},{"location":"Call%20APIsec%20APIs/#step-2-authenticating-and-generating-a-jwt-token","title":"Step 2: Authenticating and Generating A JWT Token","text":"<p>curl -s -X POST https://cloud.apisec.ai/auth/login -H 'Accept: application/json' -H 'Content-Type: application/json' -d '{\"username\": \"YOURUSERNAME\", \"password\": \"YOURPASSWORD\"}'</p> <p>You will receive a token in the response body.</p> <p>{\"token\":\"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJOZXRCYW5raW5nLy9mZXJvekBmeGxhYnMuaW8iLCJzY29wZXMiOiJST0xFX1VTRVIsUk9MRV9QUk9KRUNUX01BTkFHRVIsUk9MRV9BRE1JTiIsImlhdCI6MTY3MDMzNjEzNSwiZXhwIjoxNjcwNDIyNTM1fQ.93ZjDjeEpasWc5Wo_Jmcd0S9nGoVQ3TSfJNJbWeeIU\"}</p> <p>Note: The TTL for this token is 24 hours.</p>"},{"location":"Call%20APIsec%20APIs/#step-3-get-entitled-projects","title":"Step 3: Get Entitled Projects","text":"<p>Prerequisite: Use the token from the previous call as part of the header value in \u201cAuthorization: Bearer \u201d</p> <p>example: curl -s -X GET https://cloud.apisec.ai/api/v1/projects -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJOZXRCYW5raW5nLy9mZXJvekBmeGxhYnMuaW8iLCJzY29wZXMiOiJST0xFX1VTRVIsUk9MRV9QUk9KRUNUX01BTkFHRVIsUk9MRV9BRE1JTiIsImlhdCI6MTY3MDMzNjEzNSwiZXhwIjoxNjcwNDIyNTM1fQ.93ZjDjeEpasWc5Wo_Jmcd0S9nGoVQ3TSfJNJbWeeIU\" -H \"Content-Type: application/json\" -H \"Accept: application/json\" </p> <p>Response structure</p>"},{"location":"Call%20APIsec%20APIs/#step-4-update-environment-base-url-or-authentication-in-the-desired-project","title":"Step 4: Update Environment Base URL or Authentication in the desired Project","text":"<p>Use the following endpoint to update the environment base URL or Authentication credentials in the desired project:    PUT:/api/v1/projects/{projectId}/env/{envId}</p> <p>Prerequisite:  Using the GET:/api/v1/projects/{projectId}/env endpoint, grab the response body to use it as a payload in the consecutive step</p> <p>example:  curl -s -X GET https://cloud.apisec.ai/api/v1/projects/{projectId}/env -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJOZXRCYW5raW5nLy9mZXJvekBmeGxhYnMuaW8iLCJzY29wZXMiOiJST0xFX1VTRVIsUk9MRV9QUk9KRUNUX01BTkFHRVIsUk9MRV9BRE1JTiIsImlhdCI6MTY3MDMzNjEzNSwiZXhwIjoxNjcwNDIyNTM1fQ.93ZjDjeEpasWc5Wo_Jmcd0S9nGoVQ3TSfJNJbWeeIU\" -H \"Content-Type: application/json\" -H \"Accept: application/json\" </p> <p>Use will receive the environment base URL and authentication credentials in the response body. Capture the response and update the values you would like to replace in the consecutive call</p> <p>example: curl -s -X PUT https://cloud.apisec.ai/api/v1/projects/{projectId}/env/{envId} -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJOZXRCYW5raW5nLy9mZXJvekBmeGxhYnMuaW8iLCJzY29wZXMiOiJST0xFX1VTRVIsUk9MRV9QUk9KRUNUX01BTkFHRVIsUk9MRV9BRE1JTiIsImlhdCI6MTY3MDMzNjEzNSwiZXhwIjoxNjcwNDIyNTM1fQ.93ZjDjeEpasWc5Wo_Jmcd0S9nGoVQ3TSfJNJbWeeIU\" -H \"Content-Type: application/json\" -H \"Accept: application/json\" -d '{ \"id\": \"8adc81a88434193f01844166fc3e253b\", \"createdBy\": \"8a80812d69055412016905ea9d592bf7\", \"createdDate\": \"2022-11-04T06:49:39.134+0000\", \"modifiedBy\": \"8a80812d69055412016905ea9d592bf7\", \"modifiedDate\": \"2022-11-04T06:55:21.607+0000\", \"version\": null, \"inactive\": false, \"projectId\": \"8adc81a88434193f01844166fc362539\", \"name\": \"Master\", \"refId\": \"Master\", \"description\": null, \"baseUrl\": \"http://netbanking.apisec.ai:8080\", \"auths\": [ { \"accessTokenUri\": null, \"authType\": \"Basic\", \"authorizationScheme\": null, \"clientAuthenticationScheme\": null, \"clientId\": null, \"clientSecret\": null, \"grantType\": null, \"header_1\": null, \"header_2\": null, \"header_3\": null, \"id\": null, \"name\": \"Default\", \"inactive\": false, \"invalid\": true, \"password\": \"PASSWORD-MASKED\", \"preEstablishedRedirectUri\": null, \"scope\": null, \"tokenName\": null, \"useCurrentUri\": null, \"userAuthorizationUri\": null, \"username\": \"user1@netbanking.io\", \"tmpAutoCompleteOffVar\": \"user1@netbanking.io\", \"newForm\": false }], \"issueTracker\": { \"id\": \"8adc81a88434193f01844166fc3f253c\", \"name\": null, \"url\": null, \"projectKey\": null, \"issueType\": null, \"account\": null, \"accountType\": null }, \"projectCreation\": false, \"localOffSet\": null, \"endpoint\": null, \"region\": null, \"url\": null, \"reachable\": true }'</p>"},{"location":"Call%20APIsec%20APIs/#step-5-get-project-vulnerabilities","title":"Step 5: Get Project Vulnerabilities","text":"<p>Note: Using the response from Step 3, make individual calls to retrieve project-specific vulnerabilities.</p> <p>This call returns Critical and High vulnerabilities only from the master environment.</p> <p>example: curl -s -X GET https://cloud.apisec.ai/api/v1/projects/{projectId}/vulnerabilities -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJOZXRCYW5raW5nLy9mZXJvekBmeGxhYnMuaW8iLCJzY29wZXMiOiJST0xFX1VTRVIsUk9MRV9QUk9KRUNUX01BTkFHRVIsUk9MRV9BRE1JTiIsImlhdCI6MTY3MDMzNjEzNSwiZXhwIjoxNjcwNDIyNTM1fQ.93ZjDjeEpasWc5Wo_Jmcd0S9nGoVQ3TSfJNJbWeeIU\" -H \"Content-Type: application/json\" -H  \"Accept: application/json\" </p> <p>Here are a few significant attributes of the vulnerability entity:</p> <ul> <li>id</li> <li>status</li> <li>environment.baseURL</li> <li>issueDesc</li> <li>label</li> <li>description</li> <li>category</li> <li>cvss</li> <li>severity</li> <li>rank</li> <li>suggestion</li> <li>createdDate</li> <li>method</li> <li>path</li> </ul>"},{"location":"Configurations%20Overview/","title":"Configurations overview","text":"<p>From the main APIsec landing page, the configuration page is used to configure global settings that include: -  Integrations for Reports, Issues Trackers, Notifications,  Playbooks Backups and SSO -  Teams which is used to create and manage teams of users -  API Groups for creating groups of API projects that can be used for various functions -  Skip Endpoints for global management of skipping endpoints for desired categories across projects</p> <p></p>"},{"location":"Configure%20GitHub%20for%20Playbooks%20Backup/","title":"Playbook Backup and Restore","text":""},{"location":"Configure%20GitHub%20for%20Playbooks%20Backup/#steps-to-configure-github-playbooks-backup-and-restore","title":"Steps to Configure GitHub Playbooks Backup and Restore  Steps to Restore Playbooks from the GitHub Repository","text":"<p>1. GitHub Credentials in APIsec can be saved via Personal Access Token or SSH <code>Reading time &lt; 3 min</code> 1.1 To configure GitHub Credentials in APIsec via Personal Access Token Step 1: Generate the PAT in Github. To generate the PAT refer to the following GitHub documentation. Select the below scopes while generating the PAT. 1. Full control of private repositories 2. Update GitHub Action workflows 3. Read org and team membership, read org projects 4. Create gists. Once the scopes are selected, the PAT is generated. Step 2:  In the APIsec project, Go to Configurations &gt; Integrations Click on Git Backup &gt; +New Credentials. A New Credentials Pop-Up window appears.  Add a name for the credential along with the Personal Access Token.  Click on Add. The credentials will be saved in the APIsec Vault.   1.2 Backup Playbooks in GitHub  Step 1: Go to GitHub and create a new Repository with a README file. Copy the 'Git Repository HTTPS URL'  as shown in the below image.  Step 2: Go to Configurations &gt; Integrations &gt; Playbook Backup in the project of APIsec. Paste the GitHub repository URL extracted from Step 1 under the GitHub repository URL field. Now click on the 'GitHub access credentials' dropdown and select your registered credential. Click Save and enable the Active toggle button.  Once these configurations are completed, the playbooks will be auto-synced into your GitHub repository. 2.1 To configure credentials for GitHub Playbooks Backup via SSH  Step 1: Open a Git Bash terminal on your local machine. Step 2. Enter the following command: ssh-keygen -t ecdsa -m PEM to generate the Public and Private keys. Step 3. The generated keys will be stored on your local drive. Extract the Public key from your drive and paste it into your GitHub account under the GitHub SSH Settings. Step 4. Go to Configurations &gt; Integrations &gt; Playbook Backup in the project of APIsec.  Click on Playbook Backup &gt; +New Credentials. A New Credentials Pop-Up window appears. Add a name to this credential. Retrieve the Private key generated in Step 2 from your local drive, paste it into the Private Key field, and click on Add. The credentials will be saved in the APIsec Vault.  2.2 Backup Playbooks in GitHub  Step 1: Go to GitHub and create a new Repository with a README file. Copy the 'Git Repository SSH URL'  as shown in the below image.  Step 2: Go to Configurations &gt; Integrations &gt; Playbook Backup in the project of APIsec. Paste the GitHub repository URL extracted from Step 1 under the GitHub repository URL field. Now click on the 'GitHub access credentials' dropdown and select your registered credential. Click Save and enable the Active toggle button.  Once these configurations are completed, the playbooks will be auto-synced into your GitHub repository. </p> <p>Step 1: Once the GitHub Credentials are configured and the playbook backup has been done as described in the 1.1 and 2.1 sections, the playbooks can be restored in APIsec. For this, Go to Configurations &gt; Playbooks  Step 2: Click on Bulk Create/Delete Playbooks. Select All from the categories drop-down list. Check Delete Custom Playbooks and click Submit.  Step 3: Go to GitHub and open the Repository where the playbooks have been backed up. Copy the 'Git Repository URL'  as shown in the below image.  Step 4: Go to Configurations &gt; Integrations &gt; Playbook Backup in the project of APIsec.  Paste the GitHub repository URL extracted from Step 3 under the GitHub repository URL field. Now click the 'GitHub access credentials' dropdown and select your registered credential. Click Save and enable the Active toggle button.  Once these configurations are completed, the playbooks will be auto-synced into APIsec from the GitHub repository.</p>"},{"location":"Configuring%20Azure%20API%20Management%20Gateway/","title":"Azure API Gateway","text":""},{"location":"Configuring%20Azure%20API%20Management%20Gateway/#configuring-azure-api-management-gateway","title":"Configuring Azure API Management Gateway","text":"<p>From the main APIsec dashboard, click API Gateways.</p> <p></p> <p>Once you have done that Click \"+ Register Gateway\" and then select Azure API Management.</p> <p></p> <p>On the next screen, you will have a number of fields to fill out:    Name (what makes sense to you), Client ID, Client Secret Key and Tenant ID.</p> <p>Then click \"Create\"</p> <p></p> <ul> <li>For Enable Automatic Onboarding, it is recommended starting with this off and then turning it on after validating the registaration of a few API's.*</li> </ul> <p></p> <p>Roles Needed: The user needs <code>API Management Service Contributor</code> and the service principal needs <code>API Management Service Reader</code> for proper access.</p>"},{"location":"Configuring%20Mulesoft%20API%20Gateway/","title":"Mulesoft API Gateway","text":""},{"location":"Configuring%20Mulesoft%20API%20Gateway/#configure-mulesoft-api-gateway-via-connected-app-credentials","title":"Configure Mulesoft API Gateway via Connected App Credentials","text":"<p>Prerequisites:  1. Create a Connected App in the Mulesoft API Gateway. Please refer to the following link 2. Select the following scopes in the Connected App:    - API Governance &gt; Governance Viewer.    - API Manager &gt; View APIs Configuration.    - Data Gateway &gt; Data Gateway Viewer. 3. Retrieve Client ID and Secret to integrate Mulesoft API Gateway with APIsec  Steps to integrate Mulesoft API Gateway with APIsec:  1. Click API Gateways Tile on the APIsec Home page.  2. Click Register Gateway  3. Select Anypoint Platform from the Gateway dropdown  4. Enter the ID and Secret obtained from the Mulesoft Gateway\u2019s Connected App and click Test.  5. Click Create to save the credentials  Note: The create button is enabled after the test is successful. If the Test button throws an error, resolve the issue and restart the process.  You may activate the Enable Automated Onboarding feature to register any new or unregistered APIs every week automatically. This job runs every Sunday at 9 PM GMT.   In the case of the existing Mulesoft API Gateway configuration with a Username and password, the credentials can be replaced with the ID and secret in the settings tab. Please refer to the Prerequisites section above to create a Connected App and obtain a Client ID and Secret."},{"location":"DeployScanners/","title":"7. Deploy Scanners","text":"<p><code>Reading time 7 min</code></p> <p>APIsec allows you to deploy a Private or Global Scanner. Go to the Scanner module by <code>click</code> 'Scanners' on the home page. </p> <p></p>"},{"location":"DeployScanners/#71-private-scanner","title":"7.1. Private Scanner","text":"<p>You can deploy Private Scanners across AWS, Azure, GCP, Kubernetes, and On-premises. The APIsec scanner is a light-weight Docker container. You can deploy the On-prem Scanner as a docker container on any Linux host or deploy across the above mentioned cloud regions. </p>"},{"location":"DeployScanners/#711-deploy-a-new-private-scanner-on-cloud","title":"7.1.1. Deploy a New Private Scanner on Cloud","text":"<ol> <li><code>click</code> '+ New Scanner' on the Scanners module page.</li> </ol> <p>  2. Enter Scanner name that you would like to associate to the scanner. It is recommended to give unique names to the Scanners to easily identify them  while deploying a registered Private Scanner. </p> <p>  3. You need to register the cloud service, which you will use for hosting the Scanner.         To register a cloud service;</p> <p>a . <code>click</code> '+ Register Cloud' -&gt; Enter the name -&gt; Select the cloud type. (For this demo, 'Azure' is selected ) </p> <p>b. Provide the required cloud credentials. For 'Azure' the credentials shown in the screenshot are required.  Note: Credentials requirements vary with the selected cloud type.  </p> <p></p> <p>c.<code>click</code> 'Advanced section' below and select the available region.   Note: credentials requirements varies with the selected cloud type. </p> <p> </p> <p>d. <code>click</code> 'Add' and the registered cloud service will appear on the current page.</p> <p></p> <p>e. <code>click</code> 'Submit' to deploy the private scanner on the cloud.</p> <p></p>"},{"location":"DeployScanners/#712-deploying-a-new-private-scanner-on-premisses","title":"7.1.2. Deploying a New Private Scanner On-premisses","text":"<p>To deploy an On-prem private scanner, you need to set up the Docker/Kubernetes on the host machine. </p> <ol> <li>Follow the step 1 and 2 of the chapter 7.1.1.</li> <li><code>click</code> 'Docker/Kubernetes Installer' and select the cluster size. (The larger cluster sizes are higher speed) </li> </ol> <p>  3. <code>click</code> 'Submit' and a screen with commands for deploying the Scanner on Kubernetes, Docker, and AWS Fargate will appear. </p> <p>  4. Click 'Ok' to proceed.   5. Enter the IP address of the Scanner. This IP is for the machine on which private scanner is deployed.   6. The commands for setting up the Scanners on Docker, Kubernetes, and AWS Fargate are provided on the same page. You can use the commands for the host system environment.   7. <code>click</code> 'Check Status' at the end of page to check the status of Scanner. This status tells us if the scanner is deployed successfully and running.   8. <code>click</code> 'Save' to deploy the On-prem private scanner.  </p> <p></p>"},{"location":"DeployScanners/#72-global-scanners","title":"7.2. Global Scanners","text":"<p>APIsec also allows you to select a ready to use Global Scanner. These scanners are deployed on the Virtual Machines of APIsec Inc. They are provided for the ease of users who do not want to set up a separate private scanner.  </p> <p>You can select any desired Global Scanner while initiating a Scan.</p> <p>A total of 9 Global Scanners are currently available. </p> <ul> <li>Rate limit Scanners run slowly with intervals. </li> <li>Super Scanners are fast. </li> <li>The other scanners are deployed on the Cloud in different regions. </li> </ul> <p></p>"},{"location":"FreeAccount/","title":"15. Sign up for Free Account","text":"<p><code>Reading time 1 min</code></p> <p>You can sign up for a free account on APIsec. Free accounts always allow limited features. </p> <p>You can get unrestricted access by purchasing the APIsec Standard, Professional or Enterprise license. More details can be found on the official website www.apisec.ai.</p> <p>To sign up a free account; <code>click</code> on 'Sign up now' located at the bottom of the APIsec Login form. </p> <p>Enter the credentials and <code>click</code> 'Signup'. If everything is correct then a free account will be successfully registered. You will then be redirected to the login form. </p> <p></p> <p>The free account does not have 'Security Categories' feature in the services menu, which restricts you from using 'Integrations' and 'Reports' for the project. Moreover, it is only limited to register 2 APIs. </p> <p></p>"},{"location":"Generating%20OAS/","title":"Generating OpenAPI Specification (OAS)","text":"Generating OpenAPI Specification (OAS) for your REST APIs  <p> By Abdullah Akbar on April 5,2022 </p> <p>The OpenAPI Specification (OAS) defines a standard, language-agnostic interface to RESTful APIs which allows both humans and computers to discover and understand the capabilities of the service without access to source code, documentation, or through network traffic inspection.[1]</p> <p>APISec supports 1.0, 2.0, 3.x versions of the OpenAPI specification (OAS) as well as Postman and RAML formats.</p> <p>The following is a list of some libraries and resources which can be helpful in generating an OpenAPI Specification (OAS) document for your existing REST API application grouped by implementation technology.</p>"},{"location":"Generating%20OAS/#aspnet-core","title":"ASP.NET Core","text":"<ul> <li>The two main OpenAPI implementations for .NET are Swashbuckle and NSwag. They are explained nicely in the Microsoft ASP.NET documentation - ASP.NET Core web API documentation with Swagger / OpenAPI | Microsoft Docs</li> <li>The OpenAPI.NET SDK contains a useful object model for OpenAPI documents in .NET along with common serializers to extract raw OpenAPI JSON and YAML documents from the model - GitHub - microsoft/OpenAPI.NET</li> </ul>"},{"location":"Generating%20OAS/#spring","title":"Spring","text":"<ul> <li>Springfox supports automated JSON API documentation for API's built with Spring - GitHub - springfox/springfox</li> <li>The springdoc-openapi Java library helps automating the generation of API documentation using Spring Boot projects - GitHub - springdoc/springdoc-openapi</li> </ul>"},{"location":"Generating%20OAS/#java","title":"Java","text":"<ul> <li>For JAX-RS based projects(Jersey/RESTEasy/Mule),Swagger Core provides examples and server integrations for generating the Swagger API Specification, which enables easy access to your REST API - GitHub - swagger-api/swagger-core</li> <li>The Swagger Maven Plugin is a JAX-RS &amp; SpringMVC supported maven build plugin, helps you generate Swagger JSON and API document in build phase -  GitHub - kongchen/swagger-maven-plugin</li> </ul>"},{"location":"Generating%20OAS/#python","title":"Python","text":"<ul> <li>Flask-RESTX is an extension for Flask which provides a coherent collection of decorators and tools to describe your API and expose its documentation properly using Swagger - GitHub - python-restx/flask-restx</li> <li>Falcon-apispec is an apispec plugin that generates OpenAPI specification (aka Swagger) for Falcon web applications -  Github - alysivji/falcon-apispec</li> <li>drf-yasg - Yet another Swagger generator helps in automated generation of real Swagger/OpenAPI 2.0 schemas from Django REST Framework code. - GitHub - axnsan12/drf-yasg</li> <li>drf-spectacular is a sane and flexible OpenAPI 3 schema generation for Django REST framework - GitHub - tfranzel/drf-spectacular </li> </ul>"},{"location":"Generating%20OAS/#nodejs","title":"Node.js","text":"<ul> <li>swagger-autogen performs the automatic construction of the Swagger documentation - swagger-autogen - npm </li> <li>NestJS provides a dedicated module which allows generating OpenAPI (Swagger) - Github - nestjs/swagger</li> <li>swagger-express is a simple and clean solution to integrate swagger with Express - swagger-express - npm</li> <li>express-oas-generator automatically generates OpenAPI (Swagger) specification for existing ExpressJS 4.x REST API applications - express-oas-generator - npm</li> <li>Hapi-swagger is a OpenAPI (aka Swagger) plug-in for Hapi When installed it will self document the API interface in a project - hapi-swagger - npm</li> </ul>"},{"location":"Generating%20OAS/#php","title":"PHP","text":"<ul> <li>swagger-php is a php swagger annotation and parsing library which generates interactive OpenAPI documentation for your RESTful API using doctrine annotations. -  GitHub - zircote/swagger-php</li> </ul>"},{"location":"Generating%20OAS/#ruby","title":"Ruby","text":"<ul> <li>rspec-openapi generates OpenAPI schema from RSpec request specs - Github - rspec-openapi </li> <li>rswag seamlessly adds a Swagger to Rails-based APIs - Github - rswag </li> <li>zero-rails_openapi is a concise DSL for generating OpenAPI Specification 3 (OAS3) JSON documentation for Ruby application - GitHub - zhandao/zero-rails_openapi</li> <li>The grape-swagger gem provides an auto generated documentation for your Grape API - GitHub - ruby-grape/grape-swagger</li> <li>Swagger::Blocks is a DSL for pure Ruby code blocks that can be turned into Swagger JSON - .GitHub - fotinakis/swagger-blocks</li> <li>openapi-rails is a CRUD interface for Rails models with OpenAPI (Swagger) specification support and Swagger UI integration - GitHub - slate-studio/openapi-rails</li> </ul>"},{"location":"Generating%20OAS/#go","title":"Go","text":"<ul> <li>swag automatically generates RESTful API documentation with Swagger 2.0 - GitHub - swaggo/swag </li> <li>go-swagger (golang implementation of Swagger 2.0) is a complete suite of fully-featured, high-performance, API components to work with a Swagger API: server, client and data model - Github - Swagger 2.0 implementation for go</li> </ul> <p>APISec seamlessly integrates with most of the popular API gateways and automatically pulls the API specs in OAS format for easy API registration.  For the purpose of document completion and developer curiosity, a select few are mentioned below. </p>"},{"location":"Generating%20OAS/#aws-api-gateway","title":"AWS API Gateway","text":"<ul> <li>get-export  is a CLI  command to export OAS from AWS API Gateway - get-export \u2014 AWS CLI 2.4.27 Command Reference </li> </ul>"},{"location":"Generating%20OAS/#google-cloud-endpoints","title":"Google Cloud Endpoints","text":"<ul> <li>Generating the OpenAPI document is described here -, Adding API management | Cloud Endpoints Frameworks for App Engine </li> </ul>"},{"location":"Generating%20OAS/#azure-api-management","title":"Azure API Management","text":"<ul> <li>API developers can export API definitions in OAS format - Export API definitions from API Management developer portal | Azure updates | Microsoft Azure</li> </ul>"},{"location":"Generating%20OAS/#apigee-edge","title":"Apigee Edge","text":"<ul> <li>Apigee Edge Proxy to OpenAPI 2.0 conversion tool. - GitHub - anil614sagar/apigee2openapi </li> </ul>"},{"location":"Generating%20OAS/#postman","title":"Postman","text":"<ul> <li>Convert Postman Collections v2.1/v2.0 to OpenAPI v3.0 -  postman-to-openapi - npm </li> </ul>"},{"location":"Generating%20OAS/#references","title":"References:","text":"<ol> <li>OpenAPI Initiative</li> </ol>"},{"location":"GettingStarted/","title":"Getting Started","text":"<p><code>Reading time 5 min</code></p> <p>Let's get started with an overview of what you can accomplish in APIsec and you can dive into each section by navigating the content on the left.</p>"},{"location":"GettingStarted/#1-register-for-an-account","title":"1. Register for an account","text":"<pre><code>From the login page:\n1. Fill in the form with your details.\n2. Click on Login.\n</code></pre>"},{"location":"GettingStarted/#2-register-an-api","title":"2. Register an API","text":"<pre><code>After you login you'll be on the user homepage.\n1. Register an API by clicking on the first block.\n2. Give your API Project a name.\n3. Add a spec URL for an OpenAPI Spec.\n4. Click \"Register\".\n</code></pre>"},{"location":"GettingStarted/#3-update-your-api-in-projects","title":"3. Update your API in Projects","text":"<pre><code>You now have an API project to work with.\n1. Click on your new project tile to work with it.\n2. You will land on the API Project Dashboard. It wont have much to see yet.\n3. Go to \"Configurations\". This is optional but good to know for later.\n    - If you know some credentials and variables you want to include, you can import them or set them up now.\n    - If not, you can skip this for now. There are default ones provided to edit and replace.\n4. Go to \"Playbooks\". It may take a few minutes for the playbooks to populate, \nyou need to wait for this before performing a scan.\n</code></pre>"},{"location":"GettingStarted/#4-run-a-scan","title":"4. Run a scan","text":"<pre><code>1. Go back to the Dashboard by clicking on the API Project name.\n2. Select your Security Categories. If you want OWASP Top 10, you can Select all, \n    - then remove the few that say \"Top 25\" at the end.\n3. Click \"Submit\"\nYour scan is running!\n</code></pre>"},{"location":"GettingStarted/#5-review-the-results","title":"5. Review the results","text":"<pre><code>After submitting, you'll land on the Scan Summary page for the scan just started.\nIt will populate with the results you can browse.\n</code></pre>"},{"location":"GettingStarted/#6-whats-next","title":"6. What's next?","text":"<pre><code>There's a lot more you can do, but you now have the basics working. Here are some features to explore:\n- Verify scan results.\n- Rescan after changes.\n- Update credentials and variables.\n- Integrate to ticket, notification and CI/CD systems.\n- Make scan summary reports a part of your regular security practices.\n</code></pre>"},{"location":"GlobalDashboard/","title":"12. Global Dashboard","text":"<p><code>Reading time &lt;2 min</code></p> <p></p> <p>APIsec offers a Global Dashboard where you can view all the Project(s) stats that include:</p> <ul> <li>Scans of the Month</li> <li>Open Vulnerabilities</li> <li>Closed Vulnerabilities</li> <li>Registered APIs</li> <li>Endpoints</li> <li>Playbooks</li> <li>Available Licenses</li> </ul> <p>The Global Dashboard offers both the graphical and list view of Project stats. Below is the graphical view of the stats. </p> <p></p> <p>At the bottom of the page is the list view of stats that lists all the Projects. It allows the user to export all the Project stats to an Excel file. This feature is helpful for keeping in-house API security testing record. </p> <p>To export the data to an Excel, <code>click</code> 'Export to Excel' at the left bottom corner of the page. </p> <p></p> <p>This is an example Excel file.</p> <p></p>"},{"location":"IP-Acceptlist/","title":"APIsec IP Acceptlist","text":"APIsec IP Acceptlist  <p> Last updated on April 20,2023 </p> <p>Please accept all the below-mentioned IPs to use the APIsec platform.</p> S.No Component Name Description IP Address Location 1 cloud.apisec.ai APIsec Cloud Platform Ingress IP 104.196.107.163 US-EAST 2 Gateway IP APIsec Cloud Platform Egress IP 34.23.155.76 --- 3 Super_1 APIsec Global Scanner 5.161.68.74 US-EAST 4 Super_2 APIsec Global Scanner 5.161.68.74 US-EAST 5 Super_3 APIsec Global Scanner 5.161.68.74 US-EAST 6 Super_4 APIsec Global Scanner 34.195.172.63 US-EAST 7 US_EAST_1 APIsec Global Scanner 5.161.93.150 US-EAST 8 US_WEST_1 APIsec Global Scanner 5.161.93.150 US-EAST 9 US_WEST_2 APIsec Global Scanner 5.161.93.150 US-EAST 10 rate-limit-bot_low APIsec Global Scanner 5.161.93.150 US-EAST 11 rate-limit-bot_medium APIsec Global Scanner 5.161.93.150 US-EAST 12 rate-limit-bot_high APIsec Global Scanner 5.161.93.150 US-EAST 13 APIPenTest_1 APIsec EthicalCheck Scanner 34.195.172.63 US-EAST"},{"location":"Integrations/","title":"Overview","text":"<p><code>Reading time 7 min</code></p> <p>The APIsec allows you to integrate you project with a number of platforms.  Integrations provide connectivity across platforms and automate the processes. </p>"},{"location":"Integrations/#51-reports-storage","title":"5.1. Reports Storage","text":"<p>You can export reports to AWSS3, GCP, and Azure cloud accounts.  The reports are sent automatically at the beginning of every month.  If you have stored the credentials for the Report Storage account in the vault, it can be used or you can add new credentials.</p> <p></p> <p>The process of adding the new credentials is explained in chapter 8. </p> <p>Note: When you add New Credentials, for the Account Type selection dropdown menu, select your application from the Report Storage section as shown in the screenshot.</p> <p></p>"},{"location":"Integrations/#52-issue-tracker","title":"5.2. Issue Tracker","text":"<p>The Issue Tracker automates the process of vulnerability life-cycle management by providing the option to integrate issue tracking a wide range of platforms like Trello, GitHub, Jira, etc.</p> <p>This can be setup by choosing the Profile and the Issue Tracker.  This example shows 'APIsec Issues'.  All of the vulnerabilities will be logged in the APIsec Project Dashboard. </p> <p></p> <p>You can choose the Issue Tracker system that best suits your requirements.  The credentials vary with the chosen system.  The process for adding the new credentials of the Issue Tracker system is the same as explained in the vault documentation..</p>"},{"location":"Integrations/#53-notifications","title":"5.3. Notifications","text":"<p>Notifications allow you to integrate Slack Channels with the Project for receiving notifications and Scan Reports. </p> <p></p>"},{"location":"Integrations/#54-git-backup","title":"5.4. Git Backup","text":"<p>With this feature, you can integrate a Git source code repository for backing up Configurations, Playbooks, and other APIsec Project files.  It also allows the security engineers to collaborate as a team for adding Playbooks, Payloads, etc. </p> <p></p>"},{"location":"Integrations/#55-cicd","title":"5.5. CI/CD","text":"<p>APIsec offers an amazing feature for terminal / command line users to trigger on-demand scans via external CI/CD Systems.  It supports ten CI/CD platforms that include AWS, GitHub Actions, Jenkins, MS Azure Pipelines and more. </p> <p>Note: The JQ and wget commands are prerequisites for this set up.</p> <p></p>"},{"location":"Integrations/#56-configure-single-sign-on","title":"5.6. Configure Single Sign-On","text":""},{"location":"Integrations/#561-okta-account","title":"5.6.1. Okta account","text":"<p>This option is available in the 'Integrations Tile'.</p> <p></p> <p>Click on the 'SSO tile' and select the integrations type as Okta.</p> <p></p> <p>A guide on 'How to Configure OKTA SSO for APIsec?' is also available in the instructions which can be accessed by clicking on the question in blue.  The link redirects you to a Google doc.</p>"},{"location":"Integrations/#562-azure-ad-account","title":"5.6.2. Azure AD account","text":"<p>This option is available in the 'Integrations Tile.</p> <p></p> <p>Click on the 'SSO tile' and select the integration type as Azure AD.</p> <p></p> <p>A guide on 'How to Configure Azure SSO for APIsec?' is also available in the instructions which can be accessed by clicking on the question in blue. The link redirects you to APIsec docs.</p>"},{"location":"Jira_Integration_FAQ/","title":"Jira Integration FAQ","text":"<p>The integration between APIsec and Jira is incredibly helpful in delivering vulnerabilities discovered in your API's to your development team in a familiar and easy to consume format.</p> <p>In the prior documentation, we discussed how to enable the Jira integration, but you probably have a few questions. </p>"},{"location":"Jira_Integration_FAQ/#when-does-a-ticket-get-created-in-jira","title":"When does a ticket get created in Jira?","text":"<p>APIsec scans your API's for vulnerabilites. When the scan is finished, any vulnerabilites are examined by one of APIsec's AI bots to look for false positives. If the vulnerability is determined to be valid, then a JIRA ticket is opened based on your integration settings.</p>"},{"location":"Jira_Integration_FAQ/#what-happens-if-the-ticket-is-closed-in-jira","title":"What happens if the ticket is closed in Jira?","text":"<p>The recomended process is to NOT close the ticket in JIRA itself. Once the developer has addressed the vulnerability, the best course of action is to trigger another scan in APIsec.  If the vulnerability is fixed, the ticket will be transition by the results of the scan.</p>"},{"location":"Jira_Integration_FAQ/#will-a-subsequent-scan-reopen-a-ticket","title":"Will a subsequent scan reopen a ticket?","text":"<p>If the issue is resolved on the API, then no ticket will be created again.</p>"},{"location":"Jira_Integration_FAQ/#what-causes-issues-to-show-up-on-subsequent-scans-but-not-the-initial-scan","title":"What causes issues to show up on subsequent scans, but not the initial scan?","text":"<p>APIsec is an evolving platform. New categories are created and playbooks are updated. Either of these cases could result in subsequent scans discovering new vulnerabilities that were not present in the initial/prior scan.</p>"},{"location":"JumpCloudSSOConfig/","title":"How to Configure JumpCloud SSO for APIsec","text":""},{"location":"JumpCloudSSOConfig/#contents","title":"Contents","text":"<p>Configuration Steps     Tutorial</p>"},{"location":"JumpCloudSSOConfig/#configuration-steps2","title":"Configuration Steps(2)","text":"<ol> <li> <p>Actions to Perform to setup JumpCloud : </p> <ul> <li>Log in to your JumpCloud admin account. (https://console.jumpcloud.com/login/admin).  </li> <li>Launch an existing organization or create a new one and launch it.   </li> <li>Go to SSO Applications and add a new application.</li> </ul> <p></p> <ul> <li>Select \"Custom Application\" &amp; click Next.</li> <li>Under \"Manage Single Sign-On (SSO),\" Select \"Configure SSO with OIDC\" and click Next.</li> </ul> <p></p> <ul> <li>Add a \"Display Label\" for the application and click Next.</li> </ul> <p></p> <ul> <li> <p>Verify the application summary and click on \"Configure Application\".</p> </li> <li> <p>Under \"SSO\" select \"Refresh token\" and under \"Client Authentication Type\" select \"Client Secret Basic\".</p> </li> <li>For \"Redirect URIs\" and \"Login URL\" provide as \"https://cloud.apisec.ai/auth/{{clientId}}/redirect\".    Note: You can obtain the clientId after clicking on the \"Activate\" button.</li> <li>Select \"Email &amp; profile\" under \"Standard Scopes\".</li> </ul> <p></p> <ul> <li>Select \"include group attribute\" and add \"ROLE\" as memberOf in the field.</li> </ul> <p></p> <ul> <li>Under \"User Groups\" assign the application to any group from the list.</li> </ul> <p>Note :    1. If no \"User Groups\" exist, you can create them in the \"USER MANAGEMENT\" section, ensuring that they align with the APIsec user roles.    2. User groups serve as a link between users and applications, enabling access.    3. Each user should be restricted to a single user group.</p> <ul> <li>Click on \"Save\" and store the \"Client ID\" and \"Client Secret\" locally. These will be prompted in a window after clicking on the \"Save\" button.</li> </ul> <p></p> <ul> <li>Place the stored \"clientId\" in \"Redirect URIs\" and \"Login URL\" under \"SSO\" by clicking on the created application and save it.</li> <li>Under \"User Management\" you can add users and user groups.    Note: Users can access the applications with the same user group assigned to the user.</li> </ul> <p></p> </li> <li> <p>Actions to Perform at APIsec: </p> <ul> <li>Login to APIsec with the organization Admin account at https://cloud.apisec.ai</li> </ul> <p></p> <ul> <li>Click on the Configurations Tile.</li> </ul> <p></p> <ul> <li>Click on SSO Tile Under Integrations and Select SSO Type as JUMPCLOUD from the Dropdown.</li> </ul> <p></p> <ul> <li> <p>On the SSO Settings tab, enter the \"Client-ID\" and \"Secret\" from the application created on JumpCloud and save by activating the form.</p> </li> <li> <p>Go to the User Portal Login page at https://console.jumpcloud.com/login</p> </li> <li>Enter the user credentials and log in.</li> <li>Click on the created application, and you should be redirected to the APIsec portal.   </li> </ul> </li> </ol>"},{"location":"KB_ScannerNetwork/","title":"APIsec Scanner Network Architecture","text":"<p>Deploying the APIsec Scanner on a local or self-managed network is an easy task. The steps to do that are covered in another article.  This page is to describe the network connectivitiy required.</p> <p>We have two endpoints for connecting the scanner to the APIsec platform. Depending on which endpoint you choose, this impacts which ports need to be open. </p> <p>The options that we have are 443 or 5671</p> <p>scanner.APIsec.ai:443 cloud.APIsec.ai:5671</p> <p>The image below is used to depict the following information:</p> <p></p>"},{"location":"Netbanking/","title":"How to setup and install Netbanking Application in Docker-Swarm Cluster!!!","text":""},{"location":"Netbanking/#prerequisites-","title":"Prerequisites:-","text":"<ol> <li>Ubuntu 20.04 LTS (64-bit) based VM for Deploying  Netbanking Application. </li> <li>No. of  Nodes: 1  <pre><code>      Node Configuration:\n           CPUs: 4 cores\n           Mem:  16 GB RAM\n           Disk: 100 GB\n</code></pre> <ol> <li>Ports:- 8080</li> </ol> </li> </ol>"},{"location":"Netbanking/#installation-steps","title":"Installation Steps.","text":"<pre><code>   git clone https://github.com/apisec-inc/On-Prem.git\n\n   cd On-Prem/Netbanking\n\n   sudo chmod a+x fx-nb-installer.sh\n\n   bash fx-nb-installer.sh\n\n   ## Once script execution finishes and installation is done, Netbanking Application and its API specs can be at the following links.\n\n   ## Netbanking application: http://&lt;Private-IP/Public-IP&gt;:8080\n\n   ## Netbanking APP API specs: http://&lt;Private-IP/Public-IP&gt;:8080/v2/api-docs\n\n   ## Note 1:- You will have to enable/open port 8080 for the inbound request to access the application in the browser.\n\n   ## Note 2:- Once fx-nb-installer.sh script execution finishes following org_users and enterprise admin accounts will be created in the postgres                      database.\n\n               Enterprise Admin:\n               email: user1@netbanking.io  password: admin123$ name: Netbanking UserA\n               email: user6@netbanking.io  password: admin123$ name: Netbanking ROLE_ADMIN\n               email: user11@netbanking.io password: admin123$ name: Netbanking ADMIN1\n               email: user12@netbanking.io password: admin123$ name: Netbanking ADMIN2\n\n               Org_users:\n               email: user2@netbanking.io password: admin123$ name: Netbanking UserB\n               email: user3@netbanking.io password: admin123$ name: Netbanking UserC\n               email: user4@netbanking.io password: admin123$ name: Netbanking ROLE_USER\n               email: user5@netbanking.io password: admin123$ name: Netbanking ROLE_PM\n               email: user7@netbanking.io password: admin123$ name: Netbanking ROLE_BANK_ACCOUNTANT\n               email: user8@netbanking.io password: admin123$ name: Netbanking ROLE_BANK_MANAGER\n\n    ## Note 3:- You can use below credentials setting while registering a project using this API SPEC application so that project connects with the   application, by clicking on \u201cAdvanced Section\u201d. \n                That helps in verifying log4j assertions and others as well.\n\n\n                 Default||Basic||user1@netbanking.io||admin123$\n                 UserA||Basic||user1@netbanking.io||admin123$\n                 UserB||Basic||user11@netbanking.io||admin123$\n                 UserC||Basic||user12@netbanking.io||admin123$\n                 ROLE_USER||Basic||user11@netbanking.io||admin123$\n                 ROLE_PM||Basic||user12@netbanking.io||admin123$\n                 ROLE_ADMIN||Basic||user6@netbanking.io||admin123$\n</code></pre>"},{"location":"Notifications/","title":"13. View Notifications","text":"<p>The APIsec notifications appear under the bell icon besides the Profile Menu. </p> <p></p>"},{"location":"OAuth2.0CC/","title":"Steps to Configure AZURE using OAuth2.0 - PKCE with Confidential Client","text":"<ol> <li> <p>Register an Application in the Azure AD Portal:</p> <ul> <li>Log into the Azure Portal.</li> <li>Navigate to Azure Active Directory, App registrations, New registration.</li> <li>Enter the following details to create an application:</li> <li>Name: ApplicationName</li> <li>Account types: Please select single/multi-tenant account types.</li> <li>Redirect URI: Select the platform as web from the dropdown.</li> <li> <p>Click Register.</p> <p></p> </li> </ul> </li> <li> <p>Configure Application for PKCE  with Confidential Client</p> <ul> <li>After an application is registered, please note the Application\u2019s Client Id and Directory (Tenant Id).</li> <li> <p>Click the \u201cRedirect URIs\u201d link to navigate to the platform configurations page.</p> <p></p> </li> <li> <p>Click Add a platform and select Web under the Web applications.</p> <p></p> </li> <li> <p>Enter the redirect URI of the application: https://{environment}.apisec.ai/auth2.0/{clientId}/redirect.</p> <ul> <li>Here\u2019s an example: https://cloud.apisec.ai/auth2.0/000008ee-c71d-4a6a-a53c-33f7eb1000000/redirect</li> </ul> </li> <li> <p>Click Configure and Save the platform configurations.</p> </li> </ul> </li> <li> <p>Enter the Homepage URL</p> <ul> <li>Click Branding and properties under Manage.</li> <li>Enter the Homepage URL, same as the redirect URI.</li> <li> <p>Click Save.</p> <p></p> </li> </ul> </li> <li> <p>Generate a Client Secret</p> <ul> <li>Under the manage section: <ul> <li>Click certificates and secrets.</li> <li>Click a new client secret.</li> <li>Enter description and expiry.</li> <li>Click Add.</li> <li>Copy the Client Secret value.</li> </ul> </li> </ul> </li> <li> <p>Create and Assign App Roles</p> <ul> <li>Click App roles under the manage section.</li> <li>Enter a display name such as \u201cAdmin\u201d.</li> <li>Select \u201cUsers/Groups\u201d under Allowed member types.</li> <li>Enter Value, Description.</li> <li>Check the box \u201cDo you want to enable this role?\u201d.</li> <li>Click Apply.</li> </ul> </li> </ol> <p>Step 6: Assign user/ groups with the Enterprise application</p> <ul> <li> <p>6.1 Navigate to the Enterprise Application from the home page.</p> <p></p> <ul> <li>Search and select the application registered in Step: 1</li> </ul> <p></p> <ul> <li>Click \u201cAssign users and groups\u201d link on the Overview page.</li> </ul> <p></p> <ul> <li>Click Add user group.</li> </ul> <p></p> <ul> <li>Select the users.</li> </ul> <p></p> <ul> <li>Select Roles &amp; click on Assign.</li> </ul> <p></p> </li> </ul> <p>Note: Users associated with a role will be used to assign the same role in APIsec.</p> <pre><code>- 6.2 **Creating &amp; assigning groups with the application**\n     - Go to the home overview page.\n     - Under manage click Groups.\n</code></pre> <p></p> <pre><code>     - Click New group &amp; fill the details.\n           - Select Group type as \u201cSecurity\u201d.\n           - Enter Group name.\n           - Enter Membership type as \u201cAssigned\u201d.\n</code></pre> <p></p> <pre><code>               - In members under users list select the users &amp; click select.\n</code></pre> <p></p> <pre><code>               - Click create to successfully add members to that specific group.\n</code></pre> <p>Step 7: Assign permissions for the group's resource</p> <pre><code>    **To assign GroupMember.Read.All permissions**\n     - Go to Application registrations page &amp; select the registered app.\n</code></pre> <p></p> <pre><code>     - Under manage click API Permissions.\n     - Click Add a permission.\n     - Under Microsoft APIs click Microsoft Graph.\n</code></pre> <p></p> <pre><code>     - Click Delegated permissions &amp; search for GroupMember under Select permissions search field.\n     - Expand GroupMember &amp; check the GroupMember.Read.All box.\n     - Click on Add permissions.\n</code></pre> <p></p> <p></p> <p>Step 8: Assign Groups with the Enterprise application         - Navigate to the Enterprise Application from the home page.         - Search and select the application registered in Step: 1.         - Click \u201cAssign users and groups\u201d link on the Overview page.         - Click Add user group.         - Select Group &amp; click on Assign.    </p> <pre><code>- Select Roles &amp; click on Assign.\n</code></pre> <p></p> <p>Step 9: Publish Application        - Click properties under manage section.        - Click the toggle to enable \u201cVisible to users\u201d.        - Click Apply changes.     .</p> <p>Step 10: Configure SSO in APIsec         - Login to APIsec application.         - Click on configuration from APIsec dashboard.         - Click on SSO and select sso type as Azure from dropdown.         - Enter the secret code copied from step 4.         - Enter the client Id and tenant Id copied from step 2.         - Click the toggle to active.         - Click Save.</p> <p>Step 11: Confirm login with SSO using OAuth2.0 - PKCE with Confidential Client           - Launch the URL https://myapps.microsoft.com/  and select the registered application which redirects the user to APIsec application dashboard.           - Alternatively, the users may use the redirect link for the SP-initiated flow.</p> <p></p>"},{"location":"OAuth2.0PC/","title":"Steps to configure Azure AD SSO using SPA with Public Client","text":""},{"location":"OAuth2.0PC/#step-1-register-an-application-in-the-azure-ad-portal","title":"Step 1: Register an Application in the Azure AD Portal","text":"<ol> <li>Log into the Azure Portal.</li> <li>Navigate to Azure Active Directory &gt; App registrations &gt; New registration.</li> <li>Enter the following details to create an application:</li> <li>Name: <code>&lt;Application name&gt;</code></li> <li>Account types: Select single/multi-tenant account types.</li> <li>Redirect URI: Select the platform as SPA from the dropdown.</li> <li>Click Register.</li> </ol>"},{"location":"OAuth2.0PC/#step-2-configure-application-for-pkce-with-spa","title":"Step 2: Configure Application for PKCE with SPA","text":"<ol> <li>After the application is registered, note the Application\u2019s Client Id and Directory (Tenant Id).</li> <li>Click the Redirect URIs link to navigate to the platform configurations page.</li> <li>Click Add a platform and select Single-page-application under the Web applications.</li> <li>Enter the redirect URI of the application. Example:</li> <li><code>https://developer.apisec.ai/azureSPA.html</code></li> <li>Click Configure and save the platform configurations.</li> </ol>"},{"location":"OAuth2.0PC/#step-3-enter-the-homepage-url","title":"Step 3: Enter the Homepage URL","text":"<ol> <li>Click Branding and properties under the Manage section.</li> <li>Enter the Homepage URL:</li> <li><code>https://{environment}.apisec.ai/?cid=client_id&amp;tid=tenant_id</code></li> <li>Example: <code>https://developer.apisec.ai/?cid=ff81da46-e7af-4fd0-8777-000000000000&amp;tid=00000000-708d-4303-8cdc-385dce520000</code></li> <li>Click Save.</li> </ol>"},{"location":"OAuth2.0PC/#step-4-generate-a-client-secret-optional-for-spa","title":"Step 4: Generate a Client Secret (Optional for SPA)","text":"<ol> <li>Under the Manage section, click Certificates &amp; secrets.</li> <li>Click New client secret.</li> <li>Enter description and expiry.</li> <li>Click Add.</li> <li>Copy the Client Secret value.</li> <li>Note: Generating client secret code is optional for SPA  </li> </ol>"},{"location":"OAuth2.0PC/#step-5-create-and-assign-app-roles","title":"Step 5: Create and Assign App Roles","text":"<ol> <li>Click App roles under the Manage section.</li> <li>Enter a display name such as \u201cAdmin\u201d.</li> <li>Select Users/Groups under Allowed member types.</li> <li>Enter Value and Description.</li> <li>Check the box Do you want to enable this role?.</li> <li>Click Apply.</li> </ol>"},{"location":"OAuth2.0PC/#step-6-assign-usersgroups-with-the-enterprise-application","title":"Step 6: Assign Users/Groups with the Enterprise Application","text":"<ol> <li>Navigate to the Enterprise Application from the home page.</li> <li>Search and select the application registered in Step 1.</li> <li>Click Assign users and groups link on the Overview page.</li> <li>Click Add user/group.</li> <li>Select the users.</li> <li>Select Roles &amp; click Assign.</li> </ol>"},{"location":"OAuth2.0PC/#step-62-create-assign-groups-with-the-application","title":"Step 6.2: Create &amp; Assign Groups with the Application","text":"<ol> <li>Go to the Home Overview page.</li> <li>Under Manage, click Groups.</li> <li>Click New group &amp; fill in the details:</li> <li>Select Group type as Security.</li> <li>Enter Group name.</li> <li>Enter Membership type as Assigned.</li> <li>In Members under the Users list, select the users &amp; click Select.</li> <li>Click Create to successfully add members to that specific group.</li> </ol> <p>Step 7: Assign permissions for the group's resource</p> <pre><code>    **To assign GroupMember.Read.All permissions**\n     - Go to Application registrations page &amp; select the registered app.\n</code></pre> <p></p> <pre><code>     - Under manage click API Permissions.\n     - Click Add a permission.\n     - Under Microsoft APIs click Microsoft Graph.\n</code></pre> <p></p> <pre><code>     - Click Delegated permissions &amp; search for GroupMember under Select permissions search field.\n     - Expand GroupMember &amp; check the GroupMember.Read.All box.\n     - Click on Add permissions.\n</code></pre> <p></p> <p></p>"},{"location":"OAuth2.0PC/#step-8-publish-application","title":"Step 8: Publish Application","text":"<ol> <li>Click Properties under the Manage section.</li> <li>Click the toggle to enable Visible to users?.</li> <li>Click Apply changes.</li> </ol>"},{"location":"OAuth2.0PC/#step-9-configure-sso-in-apisec","title":"Step 9: Configure SSO in APIsec","text":"<ol> <li>Login to the APIsec application.</li> <li>Click on Configuration from the APIsec dashboard.</li> <li>Click on SSO and select SSO type as Azure from the dropdown.</li> <li>Enter the secret code copied from Step 4.</li> <li>Enter the Client Id and Tenant Id copied from Step 2.</li> <li>Click the toggle to Activate.</li> <li>Click Save.</li> </ol>"},{"location":"OAuth2.0PC/#step-10-confirm-login-with-sso-using-oauth20-spa","title":"Step 10: Confirm Login with SSO using OAuth2.0 - SPA","text":"<ol> <li>Launch the URL <code>https://myapps.microsoft.com/</code> and select the registered application which redirects the user to the APIsec application dashboard.</li> <li>Alternatively, the users may use the redirect link for the SP-initiated flow.</li> </ol>"},{"location":"OktaSSOConfig/","title":"How to Configure OKTA SSO for APIsec","text":"<p>This setup might fail without parameter values that are customized for your organization. Please use the Okta Administrator Dashboard to add an application and view the values that are specific for your organization. </p> <p>If you have not yet added the APISec app to your Okta organization please follow the below instructions :</p> <ul> <li>Sign in to your Okta organization with your administrator account.</li> <li>In the Admin Console, go to Applications &gt; Applications.</li> <li>Click Browse App Catalog.</li> <li>Enter APIsec in the Search... text box</li> <li>On the catalog page for the app integration, click Add.</li> <li>Enter a label for your copy of this app integration. Click Done to add this to your org.</li> <li>On the Assignments tab, click Assign to assign the app integration to any user or group in your org. Click Done when the assignments are complete.  </li> </ul>"},{"location":"OktaSSOConfig/#supported-features","title":"Supported Features :","text":"<p>The APISec Okta SSO  integration currently supports the following features: -  IdP-initiated SSO -  JIT (Just In Time) Provisioning</p> <p>For more information on the listed features, visit the Okta Glossary</p>"},{"location":"OktaSSOConfig/#configuration-steps","title":"Configuration Steps :","text":"<ul> <li> <p>Sign in to Apisec with the organization Admin account at https://cloud.apisec.ai</p> <p></p> </li> <li> <p>Click on Configurations Tile</p> <p></p> </li> <li> <p>Click on SSO Tile Under Integrations and Select SSO Type as OKTA from the Dropdown.</p> <p></p> </li> <li> <p>Enter Issuer, Client-ID and Sign-In URL.</p> </li> <li>Issuer : Copy and paste the following:         - In Okta , Issuer URL is the https://your-domain.okta.com</li> <li> <p>Client-ID : Copy and paste the following:         - In Okta, select the Sign On tab for the APIsec and copy the Client ID.</p> <p></p> </li> <li> <p>App Embed Link : Copy and paste the following:         - In Okta, select the General tab for the APISec and copy the Embed Link.</p> <p></p> </li> <li> <p>Click Save.</p> </li> </ul>"},{"location":"OktaSSOConfig/#notes","title":"Notes :","text":"<p>Make sure the URL does not have any extra slash at the end in the issuer field under the SSO Settings tab in APIsec. Using the wrong value will prevent you from authenticating via OIDC to APIsec.   Eg: https://your-doman.okta.com</p>"},{"location":"On-PremisesSanityTestGuide/","title":"On-Premises Sanity Test Guide","text":""},{"location":"On-PremisesSanityTestGuide/#1-api-registration","title":"1. API Registration","text":"<p><code>Reading time 11 min</code></p> <p>Register your APIs for security test and compliance. </p> <p>To get started with APIsec security coverage and scanning for your APIs, you need to first register your API.</p> <p>On the Homepage, <code>click</code> Register API </p> <p></p> <p>Add an API name, and an API Documentation URL/File.</p> <p></p>"},{"location":"On-PremisesSanityTestGuide/#2-scanners-deployment","title":"2. Scanners Deployment","text":"<p>Playbooks are scanned and tests are executed to uncover vulnerabilities.</p> <p><code>click</code> on 'Scanners' module on the home page as shown in the screenshot.</p> <p></p> <p>You can deploy Private Scanners across AWS, Azure, GCP, Kubernetes, and on-premises.     The APIsec scanner is a light-weight Docker container. </p> <p>You can deploy the on-prem Scanner as a docker container on any Linux host or deploy across the above mentioned cloud regions.</p> <ol> <li><code>click</code> on New Scanner on the Scanner module page.</li> </ol> <p></p> <ol> <li>Enter Scanner name and register the cloud service.</li> </ol> <p></p> <ol> <li>Click <code>Submit</code> to deploy the private scanner. </li> </ol> <p>On-Prem Deployment</p> <p>To deploy an on-prem private scanner, you need to set up the Docker/Kubernetes on the host machine.</p> <ol> <li><code>click</code> on 'Docker/Kubernetes installer' and select cluster size.</li> </ol> <p></p> <ol> <li><code>click</code> 'Submit' and 'OK' to proceed.</li> </ol>"},{"location":"On-PremisesSanityTestGuide/#3-environment-and-authentications-configuration","title":"3. Environment and Authentications Configuration","text":"<p>Based on security categories, the environments and authentications are configured to access APIs.</p> <p>To add, edit, and delete the current API testing environment and the API user-login credentials.   When you register the API, the API environment is created. The default name is \"Master\" and the BaseURL is the API URL registered. </p> <p>You can add or clone an environment by clicking on the ellipsis besides the scroll bar.   The 'Authentications' list contains all the 'Credentials/Tokens' previously provided while registering the API. </p> <p>You can also add and edit them on this page.</p> <p>It is required to have a \"Default\" an \"Invalid_Auth\" authentications in a every environment for security testing.</p> <ol> <li>To add Environment Click on 'Add Env', Insert Name and BaseURL. </li> <li>To Add an Auth Click on 'Add Auth' Insert and select 'Authentication Type'.</li> <li>To Test added Authentication, select Auth and <code>click</code> on 'Test Authentications'.</li> </ol> <p></p>"},{"location":"On-PremisesSanityTestGuide/#4-triggering-scans","title":"4. Triggering Scans","text":"<p>Executes generated playbooks of OWASP categories.</p> <p>The key feature on the 'Project' dashboard is the 'Scan'.    You can initiate a Scan on the current Project by clicking on scan tile on the top-right of the page.</p> <p>Select Profile + Select Scanner + Select Categories, you can initiate a Scan by clicking on 'Submit'.</p> <p>After the Scan is completed, it displays all the results.</p> <p></p>"},{"location":"On-PremisesSanityTestGuide/#5-detected-vulnerabilities-view","title":"5.  Detected Vulnerabilities View","text":"<p>Provides the vulnerability test results.</p> <p>At the bottom of the 'Project' page, the list of Open Vulnerabilities appears after the Scan.   You can view the details of each vulnerability by clicking on it.</p> <p></p>"},{"location":"On-PremisesSanityTestGuide/#6-false-positives-review-fp","title":"6. False Positives Review (FP)","text":"<p>Alert that incorrectly indicates that a vulnerability is present.</p> <p>False positives are identified and marked by an AI Bot. </p> <p></p>"},{"location":"ProjectDashboard/","title":"4. Project Dashboard","text":"<p><code>Reading time 21 min</code></p> <p>After registering the API, a Project tile is added in the 'Projects Section'. Users can view the Individual Project Dashboard by clicking on the desired Project tile or row. </p> <p></p> <p>In the Project Dashboard you can view all the current project stats represented by figures and charts. You can initiate a scan, view scan history, and check project health status. Another useful feature is the list view of the 'Open/Closed Vulnerabilities' at the very bottom of the 'Project' page.  </p> <p>It also has 'Configurations' and 'Reports' pages that allows the user to configure the current API project as per the requirement and view or download detailed reports of the current Project pentest. </p>"},{"location":"ProjectDashboard/#41-project-overview","title":"4.1. Project Overview","text":"<p>The 'Project Overview' page clearly displays all the stats of the current Project. All of the displayed stats are self-explanatory. But, the notable and most important ones are the Scan, Endpoints, Security Categories, and Playbooks tile.  The 'Select Environment' option allows you to select different API environments for testing. By default the environment is 'Master' but you can add and edit existing environments in the 'Configurations' page. </p> <p>More details on the environment, Profile, and Playbooks are given in chapter 4.2. </p> <p></p>"},{"location":"ProjectDashboard/#411-view-project-health-status-scans-activity","title":"4.1.1. View Project Health Status, Scans &amp; Activity","text":"<p>The 'Project Health Status' tile besides the pie charts shows the current status of the project. </p> <ul> <li>Environment: Shows the current environment, host and port project is configured on. By default the environment is \"Master\". Users can directly edit the project environment by clicking on \"Master\". If anything in red is mentioned here that means something was missed while 'Registering the API'. (more details in chapter 4.2.1.)</li> <li>Credentials: Shows the environment credentials the project is set up with. You can directly edit or configure them by clicking on 'Edit Cred'. (more details in chapter 4.2.1.)</li> <li>Playbook Health: Displays whether all of the available 'Playbooks' are compatible with the Project Environment and are ready for a 'Scan'. </li> </ul> <p></p> <p>-&gt; All Scans: </p> <p>You can view the details of all the 'Scans' performed on the Project. To view 'Scan' details, <code>click</code> 'All Scans' on the tile besides 'Monthly Scans'. </p> <p>You can view detailed individual 'Scan' results by clicking on desired scan from the list. </p> <p></p> <p>-&gt; Activities:</p> <p>You can view the activities performed by all of the users on the project. Logs generated for the particular activity can be viewed by clicking on \"file icon\" in front of the activity. </p> <p>To view the activities, <code>click</code> 'Activities' under the 'All Scans'. </p> <p></p> <p>This is the logs view of the activity. </p> <p></p>"},{"location":"ProjectDashboard/#412-view-endpoints-edit-the-api-source-code","title":"4.1.2. View Endpoints &amp; Edit the API Source Code","text":"<p>The Endpoints tile on the 'Project' page shows the total number of endpoints the registered API has. When you click on this tile, it redirects the you to a page where details of all the Endpoints are given. </p> <p></p> <p>The notable feature on this page is that it provides you an option to edit the API source code with an OAS Editor. </p> <p>Note: if you are not a tech-geek please do not attempt using this feature. This requires a deep understanding of APIs and programming them.</p> <p></p>"},{"location":"ProjectDashboard/#413-initiate-a-scan","title":"4.1.3. Initiate a Scan","text":"<p>The important feature on the 'Project' page is the 'Scan'. You can initiate a Scan on the current Project by clicking on the blue <code>scan</code> tile on the right of the page. </p> <p>Before initiating a scan, you need to do quick configurations which includes:</p> <ul> <li>Profile: Select the environment and profile to run the scan on. (more details in chapter 4.2.3.)</li> <li>Scanner: Select a Public or Private Scanner. (scanner details in chapter 7: Deploy Scanners)</li> <li>Categories: Select the Security Category(s) to test against the API. (more details in chapter 9)</li> </ul> <p>You can initiate a Scan by clicking on 'Submit' or go to the 'Advanced' section for more custom settings. </p> <p></p> <p>The Advanced section requires following information: </p> <ul> <li>Resources: Select the API resources to include in the Scan. </li> <li>Endpoints: Select the API endpoints to include in the Scan. </li> <li>Playbooks: Add custom Playbooks for the Scan. (more details in chapter 4.2.4.)</li> </ul> <p>Also, you can select the check box 'Email report after scan completion' to receive the Scan report on your registered email.</p> <p></p> <p>When a user clicks on 'Submit', the Scan is initiated. </p> <p></p> <p>After the Scan is completed, it displays all the results. </p> <p></p> <p>This page gives the details of Playbooks against the API and their outcome. You can view logs and Analytics of each playbook separately by clicking on the buttons under 'Analytics' column. </p> <p></p> <p>This is the log view. </p> <p></p> <p>This is the Analytics view. </p> <p></p>"},{"location":"ProjectDashboard/#414-view-open-vulnerabilities","title":"4.1.4. View Open Vulnerabilities","text":"<p>At the bottom of the 'Project' page, the list of Open Vulnerabilities appears after the Scan.  You can view the details of each vulnerability by clicking on it. </p> <p></p> <p>It allows a you to perform certain actions like downloading the reports, closing the vulnerabilities, viewing RBAC map, or view the list of closed vulnerabilities.</p> <p></p> <p>If a you click on any 'Open Vulnerability' then you will be redirected to vulnerability details page. This page contains all of the information about the particular vulnerability including the logs and remediation techniques. You can perform certain actions that include: </p> <ul> <li>Reverify: Will ask you to perform another scan. This way a you can verify if it was a false positive.</li> <li>Deactivate Test: Will discard/close the vulnerability and deactivate the 'Playbook'. This means that this test will not longer run for this endpoint</li> <li>Mark endpoint unsecured: Will add a 'Unsecure' flag to that particular endpoint. This can be done for segmentation of secured and unsecured endpoints. This option will only show up for authentication type vulnerabilites</li> <li>Dismiss: Will completely remove the vulnerability from the record.</li> <li>Bulk Close/Archive: Will close or archive all the vulnerabilities. Those particular vulnerabilities will not appear under 'Open vulnerabilities' section. </li> <li>Review: Allows the you to mark the vulnerability 'reviewed' for others to see.</li> </ul> <p></p>"},{"location":"ProjectDashboard/#42-configurations-page","title":"4.2. Configurations Page","text":"<p>The 'Configurations' next to the 'Project' tab takes you to the Project configuration page.  This page is the control panel of the Project, where you can play around with:</p> <ul> <li>Environment &amp; Credentials</li> <li>Variables</li> <li>Profiles</li> <li>Playbooks</li> <li>Categories</li> <li>Payloads</li> <li>Integrations </li> <li>Details </li> </ul> <p>Please note that all the settings will be limited to the current Project only. Every Project needs to be configured separately from the respective 'Project Dashboard'. </p>"},{"location":"ProjectDashboard/#421-set-up-the-environment-credentials","title":"4.2.1 Set up the Environment &amp; Credentials","text":"<p>This page allows you to add, edit, and delete the current API testing environment and the API user-login credentials. </p> <p>-&gt; Environment Details: </p> <p>When a you register the API, the API environment is created. The default name is \"Master\" and the base URL is the API URL registered. You can add or clone an environment by clicking on the ellipsis besides the scroll bar. </p> <p></p> <p>when you click on the 'Add Env' then you are redirected to the below page. Enter the \"Name\" and the \"Base URL\", and <code>click</code> 'Create' to add a new environment.</p> <p></p> <p>The 'Clone Env' option creates a copy of the current environment. </p> <p></p> <p>-&gt; Authentications:</p> <p>The 'Authentications' list contains all the 'Credentials/Tokens' previously provided while registering the API. You can also add and edit them on this page. </p> <p>It is mandatory to have a \"Default\" an \"Invalid_Auth\" authentications in a every environment for security testing. </p> <ul> <li>\"Default\" contains default credentials </li> <li>\"Invalid_Auth\" contains invalid credentials</li> </ul> <p></p> <p>To add an authentication;  <code>click</code> on 'Add Auth' under the ellipsis menu.  For adding an authentication, provide the \"Name\", select \"Authentication Type\". </p> <p>The credentials requirement varies with the selected type. Most of them require username and password.</p> <p></p> <p>You can bulk-add the authentications by clicking on 'Bulk Add Auths' under the ellipsis menu. The explanation is provided in Section 1.</p> <p></p> <p>To test the added authentication; <code>click</code> on the name from the list, then <code>click</code> on 'Test Authentications'. You can test all of the authentications by clicking 'Save &amp; Test All Auths' button at the very bottom of the page. </p> <p></p> <p>If the authentication is valid then a pop-up will appear (like the screenshot below) and the status will change from \"Not Working\" to \"Working\". </p> <p></p>"},{"location":"ProjectDashboard/#422-configure-the-variables","title":"4.2.2. Configure the Variables","text":"<p>This section allows you to add, edit or delete the API variables. Initially they are auto-fetched when the API is registered. You can add new variables and modify the ones already existing. </p> <p></p> <p>To add a new variable;  <code>click</code> on '+ New Variable' and provide the required values as shown in the screenshot below. </p> <p></p> <p>To add variables in bulk; <code>click</code> on '+ New Variables (Bulk)' and provide the required values as shown in the screenshot below.  You can upload an excel file or enter all the variables in text box according to the format mentioned in the comment box. </p> <p></p>"},{"location":"ProjectDashboard/#423-set-up-the-scan-profile","title":"4.2.3. Set up the Scan Profile","text":"<p>This section allows you to set up the scan profile(s) for the Project environment. You can configure the profile(s) for different environments.  </p> <p></p> <p>To add a new profile; <code>click</code> on '+ New Profile'. Provide the required values as shown in the screenshot below. Also, you can schedule the time for performing daily scans on the selected API environment. </p> <p></p> <p>There are already existing profiles which are automatically created when an API is registered and the environment is configured. You can edit these profiles and schedule daily scans on them. </p> <p>APIsec provides \"Trainning Profiles\". The only difference in these profiles is that they do not track vulnerabilities. These profiles are for beginners who want to learn through exploring. </p>"},{"location":"ProjectDashboard/#424-play-with-playbooks","title":"4.2.4. Play with Playbooks","text":"<p>Playbooks execute the payloads against the configured tyarget API + environment. APIsec has a over 1200 Playbooks but the number of Playbooks available for scanning are 229. As of now, 994 new Playbooks are added to the APIsec central repository. New Playbooks are constantly added and released for use in the product. </p> <p></p> <p>The \"Coverage Breakdown\" pie chart shows the categories of Playbooks and total number of Playbooks in each category. When a you click on a slice of pie chart, all of the Playbooks in that 'Security Category' appear below.  </p> <p>The \"Playbook Trend\" graph next to the pie chart represents the trend of Playbooks. From April 23, 2022 till the time of writing this document, The total number of Playbooks remained constant i.e, 1223. </p> <p></p> <p>The section below the figures contains the list of Playbooks. You can filter the Playbooks by categories, working, new addition or all Playbooks. </p> <p></p> <p>-&gt; Create a New Playbook:</p> <p>To create a new playbook, <code>click</code> on '+ New Playbook'. </p> <p>The Playbook script text editor has the template with comments. Someone with relevant technical background can understand the template from comments and write or edit the script.  You also need to choose the Playbook type. Only 'POST Playbook' option is currently available, if the new Playbooks needs to have a POST method then choose this type.</p> <p></p> <p>-&gt; Bulk Create/Delete Playbooks:</p> <p>You can bulk add and delete the playbooks based on the 'Security Category(s)'. </p> <p>To create Playbooks, select the category(s) and <code>click</code> submit. APIsec auto-generates the Playbooks for the selected category. \"Authentication Exploit\" in the example. </p> <p></p> <p></p> <p>You can bulk delete the Playbooks via 'Delete Playbooks' option. </p> <p>-&gt; Edit the Playbook(s):</p> <p>APIsec also allows the you to edit the pre-built or user added Playbooks and propagate the changes across the platform.</p> <p>To edit a Playbook, <code>click</code> on the desired Playbook.  You can edit the script with the text editor and save the changes. You can perform a Scan on the API using that particular Playbook only. </p> <p>To perform a Scan; select an environment, select a scanner, and <code>click</code> on Scan. </p> <p></p> <p>The ellipsis on the top right of this pop-up contains different options to propagate the changes. </p> <p></p>"},{"location":"ProjectDashboard/#425-categories","title":"4.2.5. Categories","text":"<p>The categories on the 'Configurations' page are the same as the 'Security Categories' (chapter 9) option in the 'Services' menu. APIsec has a total 118 categories. 34 are currently active and 84 are inactive. The inactive categories are activated as needed.</p> <p>You can switch between 'Tiles View' and 'List View' as needed. You can Apply the filters like All, Active, Inactive, and Type on the categories. </p> <p></p> <p>To view the details of a category and configure the attack scenarios, <code>click</code> on the tile of desired category.</p> <p>The page shown below contains:</p> <ul> <li>Name</li> <li>Overview</li> <li>Severity</li> <li>Vulnerability Impact</li> <li>Exploitation</li> <li>Remediation</li> <li>References</li> <li>Attack Scenarios </li> </ul> <p>There are some configuration options at the bottom of page. These are explained in chapter 9. </p> <p></p> <p>To add a new attack scenario, <code>click</code> on '+ Add Attack Scenarios' and provide the required values.</p> <p></p> <p>To edit already added attack scenario, <code>click</code> on the desired one from the list.</p> <p>When configurations is complete you can choose to only save the changes or 'Save and Rewrite Playbooks'. If major changes are done then it is recommended to <code>click</code> on 'Save and Rewrite Playbooks'.</p> <p></p>"},{"location":"ProjectDashboard/#426-payloads","title":"4.2.6. Payloads","text":"<p>APIsec has 4 types of Payloads:</p> <ol> <li>Default</li> <li>Injection</li> <li>Stored Injection</li> <li>Access Based Authentication Control (ABAC)</li> </ol> <p></p> <p>These payloads are used by Playbooks to exploit the vulnerabilities in the API. If a you edit any payload then you needs to re-configure the relevant Playbook(s).</p> <p>To edit a Payload, <code>click</code> on one from the list. Once the payload is edited, you can 'Lock &amp; Save' or 'Save' or 'Save &amp; Propagate'. The later option saves and propagates the changes across all the Playbooks.</p> <p></p>"},{"location":"ProjectDashboard/#427-view-the-details-of-project","title":"4.2.7. View the Details of Project","text":"<p>This view contains all of the details about the registered API in the current project. The details include  - API source code - API Name - API document or URL - Collaborators </p> <p>The 'API project' page contains the details about the API. </p> <p></p> <p>The 'Collaborators' view allows you to assign registered users for managing the project. </p> <p></p> <p>'OpenAPI Spec' contains the API code. Non OAS is empty because the registered API format is the OpenAPI Specification. If the API is in any other supported format then the API code will appear in Non OAS. </p> <p></p>"},{"location":"ProjectSection/","title":"3. Projects Section","text":"<p><code>Reading time &lt; 1 min</code></p> <p>The APIsec Home page has a Project section below the Services tiles. Once you Register an API, a Project is created and added in this section. The name of the Project is same as the API name you enter while registering the API.</p> <p>This section has two views. i.e, Grid and List view. You can select the one that works best for you. </p> <p><code>click</code> on the buttons above Project tile to switch the view. </p> <p>Another useful feature is the 'Search' bar. User can search for the desired Project by the Project name.  You can also switch between 'My Projects' or 'All Projects' with the toggle besides the search bar. </p> <ul> <li>'My Projects' only show the Projects created by the current user. </li> <li>'All Projects' are restricted to admins only</li> </ul> <p></p>"},{"location":"RegisterAPI/","title":"Register API","text":"APIsec Technical Documentation"},{"location":"RegisterAPI/#1-register-an-api","title":"1. Register an API","text":"<p><code>Reading time &lt; 3 min</code></p> <p>To get started with APIsec security coverage and scanning for your APIs, you need to first register your API.</p> <p>On the Homepage, <code>click</code> Register API </p> <p></p>"},{"location":"RegisterAPI/#11-basic-section","title":"1.1. Basic Section","text":"<p>The Basic Section requires the following information:</p> <ol> <li>API name: Provide any name that you would like to link with your project. </li> <li>API Document URL or File: Provide a URL or upload a file to allow APIsec to record your API in the database for automated security coverage. <ul> <li>The supported formats for a URL link are OpenAPI Specification (OAS), Swagger, Postman &amp; RAML.  e.g. <code>https://example.com/v2/api-docs</code> </li> <li>The supported formats for an API document file are same as for URL link. </li> </ul> </li> </ol> <p></p>"},{"location":"RegisterAPI/#12-advanced-section","title":"1.2. Advanced Section","text":"<p>The Advanced Section requires the following information:</p> <ol> <li>Credentials:  Provide credentials for the API i.e. username, role, email &amp; password. These credentials are for specific user accounts you want to scan via APIsec. We recommend including a user to represent each role within your product or organization. <ul> <li>The format is  <code>UserA||Basic||[user1@example.com](mailto:user1@example.com)||admin123$</code> <li>Tokens:  An API token is similar to a password and allows a user to authenticate to a software API to perform actions. The API service generates a unique token for the requested application or user, which is used every time for authentication when the user requests to use the service.<ul> <li>Find the steps to generate the token by clicking <code>show more</code> on the comment box of the Advanced Section.  </li> </ul> </li> <li>Scanner Selection:  You can <code>select</code> a scanner from the list of APIsec private scanners available in the drop-down menu. I selected Super_1 for this demo. </li> <p></p> <p>Once you completed all of the requirements, <code>click</code> Register and proceed. </p> <p>A message prompt will be displayed on the Homepage like in the screenshot below.  Your project name will be created with your settings similar to  \"Demo\" in the screenshot and added to My Projects</p> <p></p>"},{"location":"RegisterGateway/","title":"API Gateway Overview","text":""},{"location":"RegisterGateway/#what-is-api-gateway","title":"What is API Gateway?","text":"<p><code>Reading time 2 min</code></p> <p>An API gateway is a server and we normally call it an API server.  It is an entry point into the application or software.  Most organizations' APIs are deployed through a cloud API gateway.  API gateways handle and process the incoming API calls from the clients and respond accordingly.  Clients can be user browsers, scripts from partners, other application components, or anything else that needs to use the common interface.</p> <ol> <li>On the Home page, <code>click</code> API Gateways.</li> </ol> <p>  2. On the API Gateways page, <code>click</code> \"+ Register Gateway\"</p> <p></p> <p>The important thing to note here is the 'Enable Automated Onboarding' checkbox, which will enable automated onboarding of APIs and onboard all the APIs uploaded or updated on that registered API gateway weekly.</p> <p>  3. Select your API's Gateway from the drop-down menu.  For this demo, I selected 'AWS'. </p> <p>  4. Provide the required credentials for registering the selected API Gateway and <code>click</code> Create.</p>"},{"location":"Reports/","title":"6. Reports","text":"<p><code>Reading time 5 min</code></p> <p>The 'Reports' page of APIsec covers the trends, summary, and coverage. This section of the Project Dashboard contains brief stats of the current Project. It also has graphical representations of Project Stats. </p>"},{"location":"Reports/#61-trends","title":"6.1. Trends","text":"<p>The 'Email Report' button at the top right corner of the 'Trends' page allows you to receive PDF of Pentest, Developer, and compliance Report in the mail box. The reports are sent to the registered email address. </p> <p>The \"API Composition\" Pie chart's each slice represents the API methods along with the total number of requests. </p> <p>The \"Endpoints Trend\" graph shows the trend of API Endpoints. The trend changes on the basis of an increase/decrease in the number of Endpoints. </p> <p></p> <p>The \"Coverage Breakdown\" and \"Playbooks Trend\" are explained in Chapter 4.2.4.</p> <p></p> <p>The \"Open Vulnerabilities\" Pie chart shows the detected vulnerabilities which are not fixed yet. It divides them on the basis of 'Security Categories'.</p> <p>The \"Vulnerability Trend\" graph shows the increase/decrease in the detected vulnerabilities in all the Scans performed. </p> <p></p> <p>This section of the 'Trends' page contains a list of 'Security Categories' along with their OWASP ranking. It shows the 'Security Categories' assessed in the API Scan and the vulnerabilities found. </p> <p></p> <p>At the end of the list, it shows the total number of Playbooks and total open vulnerabilities. The important option here is the 'Download as Excel' button. </p> <p>Below is the view of the Excel file. </p> <p></p>"},{"location":"Reports/#62-summary","title":"6.2. Summary","text":"<p>The 'Summary' Page contains the briefs of Project API Scan where you can download the PDF of the summary. </p> <p></p>"},{"location":"Reports/#63-coverage","title":"6.3. Coverage","text":"<p>The 'Coverage' has a list view of coverage breakdown. The 'Security Categories' mapped against the API resources and Endpoints are presented. </p> <p>The 'Y' green box shows that the particular category was mapped against the API. The 'N' red box is the opposite. </p> <p></p> <p>If you need to re-test the category for a particular resource, then <code>click</code> on the green box.  Select the environment -&gt; Select Scanner -&gt; <code>click</code> Scan </p> <p>*the categories with 'N' status cannot be re-assessed. </p> <p></p> <p>The important feature on this page is the 'Download as Excel' button at the bottom right corner of the page. </p> <p>Below is an example of the Excel file. </p> <p></p>"},{"location":"SecuringCredentialsExternally/","title":"Securing APIsec Service Account Credentials in Vault","text":"Securing APIsec Service Account Credentials in Vault or Privileged Access Manager Solution  <p> By Feroz Syed on August 23,2022 </p>"},{"location":"SecuringCredentialsExternally/#problem-statement","title":"Problem Statement:","text":"<p>APIsec supports Single Sign-On with OKTA using the OpenID Connect standard. Once Single Sign-On is activated in an APIsec organization, the users of that organization can no longer access their accounts using basic authentication. They should instead access the APIsec application with their OKTA Account. However, the APIsec APIs rely on the basic credentials required to generate an access token.</p>"},{"location":"SecuringCredentialsExternally/#solution","title":"Solution:","text":"<p>Organizations enabling Single Sign-On with APIsec should request them to create a service account to access the APIsec APIs. The APIsec Administrator creates and shares the credentials with the organization admin, who could change the password and store them in their preferred vault. These credentials are required to generate an access token before accessing the APIsec APIs.</p>"},{"location":"SecuringCredentialsExternally/#high-level-process","title":"High-Level Process:","text":"<ol> <li>Reach out to the APIsec team for the creation of a service account, if SSO is active in your organization.</li> <li>Change the password of the newly created service account and store it in the vault.</li> <li>Create a policy that restricts other users from accessing the password. Except for the organization admin, no one can fetch the password.</li> <li>Using a client such as GitLab, schedule a job to rotate the access token at least twice daily and store it in the vault.</li> <li>Create a policy that restricts developers from updating or deleting the token. However, they should be allowed to access the token for calling APIsec APIs.</li> </ol>"},{"location":"SecuringCredentialsExternally/#summary","title":"Summary","text":"<p>APIsec platform provides REST APIS to perform almost all operations available from the Web Application. In general, APIsec APIs could help register a new API or reload a specification in an existing API project. Similarly, developers can run a new scan and review the vulnerabilities from the current scan. This way, developers can use the APIsec APIs to operationalize the core features of APIsec without using the APIsec Web Application.</p>"},{"location":"SecurityCategories/","title":"APIsec Security Categories","text":"<p>Using Security Categories in APIsec</p>"},{"location":"SecurityCategories/#what-is-a-security-category","title":"What is a Security Category?","text":"<p>A Security Category is a set of security tests that will be used to intelligently create tests applied to endpoints. Each security category is a test generator to find security issues.</p>"},{"location":"SecurityCategories/#what-is-a-security-category-tier","title":"What is a Security Category Tier?","text":"<p>A Security Category is a set of security tests that will be used to intelligently create tests applied to endpoints. Each security category is a test generator to find security issues.</p>"},{"location":"SecurityCategories/#security-category-tiers","title":"Security Category Tiers","text":""},{"location":"SecurityCategories/#tier-0","title":"Tier 0","text":"<ul> <li>**The beginning. ** All you have is a URL. There is no specification or a minimal specification for the API. Nothing else is configured.</li> <li>What is tested: Server level configurations can be tested at this tier.  </li> <li>Examples: SSL certificates, Headers</li> </ul>"},{"location":"SecurityCategories/#tier-1","title":"Tier 1","text":"<ul> <li>This tier has a good specification (file/url) to work with. The endpoints and parameters are defined that allow more complex tests to intelligently target the API.</li> <li>What is tested: Endpoint testing without authentication. Parameters without authentication can be tested and any endpoints that should require authentication but do not, can also be discovered.</li> <li>Examples: Malicious payloads allowed in parameters without authentication.</li> </ul>"},{"location":"SecurityCategories/#tier-2","title":"Tier 2","text":"<ul> <li>Tier 2 requires authentication to be configured along with working users for that authentication.</li> <li>What is tested: All endpoints are tested with the users configured to see what security issues can be found behind authenticated access.</li> <li>Examples: Insecure authentication practices</li> </ul>"},{"location":"SecurityCategories/#tier-3","title":"Tier 3","text":"<ul> <li>This tier requires configuring more complex scenarios pre-defined in APISec. It may include things like defining roles or acceptable payloads.</li> <li>What is Tested: Tests with multiple steps to look for access and logic issues that can\u2019t be determined with a single api endpoint call or basic configuration.</li> <li>Examples: RBAC</li> </ul>"},{"location":"SecurityCategoriesUse/","title":"Security Categories Use","text":"<p><code>Reading time 4 min</code></p> <p>APIsec allows you to use a public or private security category(s) while running a Scan.</p> <p></p>"},{"location":"SecurityCategoriesUse/#91-public-security-categories","title":"9.1. Public Security Categories","text":"<p>APIsec has 123 total up-to-date public security categories. These security categories include OWASP Top 10 along with other known API vulnerabilities. </p> <p>The security categories are constantly updated. Existing ones include:</p> <ul> <li>Unsecured Endpoints </li> <li>Authentication Weakness</li> <li>Role-Based Access Controls (RBAC)</li> <li>Attribute-Based Access Controls (ABAC)</li> <li>SQL Injection</li> <li>Distributed Denial of Service </li> </ul> <p></p>"},{"location":"SecurityCategoriesUse/#92-private-security-categories","title":"9.2. Private Security Categories","text":"<p>APIsec offers this unique feature to its enterprise customers to add custom security models for newly discovered vulnerability(s) of a database or a framework. </p> <p>Note: Only the Enterprise admin can add or edit a security model. </p> <p>To add a new security model:</p> <ol> <li> <p><code>click</code> 'New Security Model' and select the type of mode from the drop-down menu.  </p> </li> <li> <p>'Injection' is selected for this demo.</p> </li> </ol> <p>The basic section requires following information:</p> <ul> <li>Name: Provide a unique name for the security model.</li> <li>Injection Data: This data is the payloads that will be injected on the target API while playbook execution (Security Scanning). </li> </ul> <p></p> <p>The Advanced Section requires following information: </p> <ul> <li>Key: This is autofilled according to the name of the security model.</li> <li>Assertions: Provide the assertions for the security model. The rules and details are mentioned in the comment box next to 'Assertions'.</li> <li>Security Model Description: This is optional but it can be added to make it easy for others to understand the purpose of the model. It can be written in plain-text or HTML tags. </li> <li>Assertions Description: This is also an optional requirement but it can be added to explicitly define the meaning of assertion expressions.</li> <li>Remediation: Admin can add the mitigation techniques for the vulnerability(s) covered under the security model. </li> <li>Tags: The tags are for the classification of vulnerability(s). for e.g, OWASP Top#2 can be a tag for the security model that covers OWASP top 2 vulnerability.</li> <li>Vulnerability Scoring System: The default is the CVSS 3.1 but you can also define a custom scoring scale. </li> <li>Est. Time to Fix(hours): The time required for fixing the vulnerability(s).</li> <li>Est. Bounty Value: The bounty offered by different programs for such vulnerability(s).</li> <li>Auth: By default it is \"Default\". But, you can use the name declared in the environment variables. </li> <li>Beta Toggle: If this security model is a beta version then turn on. </li> <li>Skip Filing Vulnerability Toggle:  If off then it prevents from filing the vulnerability after the scan. If the vulnerability is detected it will not be filed (recorded) in the results. </li> <li>Scope: The scope for a custom security model is private and it is visible to the enterprise user only.</li> </ul> <p>  3. <code>click</code> 'Build and Launch' to make it ready for use during the Scan.</p> <p></p>"},{"location":"SecurityCenter/","title":"Security Center Dashboard","text":"<p><code>Reading time 4 min</code></p> <p>APIsec provides all customers with a Security Center Dashboard that summarizes information across all API applications into one view. You can access the security center from the dashboard on the far right menu item. </p>"},{"location":"SecurityCenter/#high-level-statistics","title":"High Level Statistics","text":"<p>At the top, the dashboard shows the following high level statistics:</p> <p></p>"},{"location":"SecurityCenter/#count-of-apis-registered","title":"Count of APIs Registered","text":"<p>Aggregate sum of all registered applications.</p>"},{"location":"SecurityCenter/#count-of-endpoints","title":"Count of Endpoints","text":"<p>Aggregate sum of all endpoints.</p>"},{"location":"SecurityCenter/#count-of-unique-endpoints","title":"Count of Unique Endpoints","text":"<p>Aggregate sum of all unique endpoints based on combination of methods and endpoints.</p>"},{"location":"SecurityCenter/#count-of-playbooks-generated","title":"Count of Playbooks Generated","text":"<p>Aggregate sum of all playbooks generated across all registered APIs.</p>"},{"location":"SecurityCenter/#count-of-playbooks-scanned","title":"Count of Playbooks Scanned","text":"<p>Cumulative count of executed playbooks across all registered APIs.</p>"},{"location":"SecurityCenter/#count-of-open-vulnerabilities","title":"Count of Open Vulnerabilities","text":"<p>Current count of open vulnerabilities across all registered APIs.</p>"},{"location":"SecurityCenter/#open-vulnerabilities-trend","title":"Open Vulnerabilities Trend","text":"<p>This dashboard enables customers to see a trend of open vulnerabilities over time, compared to the number of endpoints.</p> <p></p>"},{"location":"SecurityCenter/#open-vulnerabilities-severity-trend","title":"Open Vulnerabilities Severity Trend","text":"<p>This dashboard breaks down vulnerabilities over time by severity. In the example below, Critical vulnerabilities increased in July of 2023, corresponding to ongoing onboarding efforts during that same period of time.</p> <p></p>"},{"location":"SecurityCenter/#active-projects-open-vulnerabilities","title":"Active Projects Open Vulnerabilities","text":"<p>This dashboard breaks down vulnerabilities by severity as in the following example:</p> <p></p>"},{"location":"SecurityCenter/#vulnerabilities-age-matrix","title":"Vulnerabilities Age Matrix","text":"<p>This dashboard shows the vulnerabilities by duration. By default, all open vulnerabilities are shown, regardless of how long they remained open.</p> <p></p> <p>Adjusting the slider at the bottom of the dashboard allows customers to limit the age of vulnerabilities. In the following example, the age of vulnerabilities shown is greater than 60 days.</p> <p></p>"},{"location":"SecurityCenter/#owasp-top-10-vulnerabilities","title":"OWASP Top 10 Vulnerabilities","text":"<p>This dashboard shows vulnerabilities that are identified focused solely on the OWASP API Top 10 Categories. Example below:</p> <p></p>"},{"location":"SecurityCenter/#list-of-unscanned-apis","title":"List of Unscanned APIs","text":"<p>This dashboard allows customers to identify API projects and associated profiles that have not been scanned within the past 6 months. Scans can be initiated via a variety of mechanisms, but this list is populated with applications that have not been scanned by any mechanism, indicating a problem that needs further investigation. Hovering over the \"(i)\" provides additional information in the tooltip. A full report of impacted APIs is downloadable in CSV format. Example below:</p> <p></p>"},{"location":"SecurityCenter/#monthly-activities-summary","title":"Monthly Activities Summary","text":"<p>This dashboard highlights recent activities covering a two month period. Example below:</p> <p></p>"},{"location":"ServiceLevelAgreement/","title":"Service Level Agreement","text":""},{"location":"ServiceLevelAgreement/#api-security-platform-service-level-agreement","title":"API Security Platform Service Level Agreement","text":""},{"location":"ServiceLevelAgreement/#_1","title":"Service Level Agreement","text":""},{"location":"ServiceLevelAgreement/#service-levels-maintenance","title":"Service Levels &amp; Maintenance","text":""},{"location":"ServiceLevelAgreement/#apisec-responsibilities","title":"APIsec Responsibilities","text":"<p>APIsec will provide and maintain the APIsec platform, and will provide access through individual user credentials. APIsec will respond to support requests within a reasonable timeframe, and take steps to escalate and resolve issues appropriately. APIsec will maintain timely communication with the customer at all times.</p>"},{"location":"ServiceLevelAgreement/#client-responsibilities","title":"Client Responsibilities","text":"<p>Client will notify APIsec of any issues related to the APIsec platform or service in a timely manner. Client will provide APIsec with access to software and services for the purposes of maintenance, updates, and fault prevention. The client will maintain timely communication with APIsec at all times.</p>"},{"location":"ServiceLevelAgreement/#support-response","title":"Support Response","text":"<p>The response time measures how long it takes APIsec to respond to a support request via email (support@APIsec.ai) or other electronic means. APIsec is deemed to have responded when it has replied to the Client\u2019s initial request via email or other electronic means, to either provide a solution or request further information. APIsec promises to respond to support requests within twenty-four (24) business hours. </p>"},{"location":"ServiceLevelAgreement/#resolution-times","title":"Resolution Times","text":"<p>APIsec will always endeavour to resolve problems as swiftly as possible and ensure that the platform remains accessible and free of security vulnerabilities. It recognises that the Client\u2019s use of the System is key to its business and that any downtime can be detrimental. However, APIsec is unable to provide guarantees regarding resolution times. This is because the nature and causes of problems can vary enormously. In all cases, APIsec will make its best efforts to resolve problems as quickly as possible and provide frequent progress reports to the Client.</p> <p>\u201cMonthly Uptime\u201d refers to the amount of time in any given month that Licensee can access the APIsec Platform, as a percentage of the total amount of time in such month, excluding Excused Outages. </p> <p>APIsec will maintain systems and controls designed to maximize Monthly Uptime, minimize unscheduled outages, minimize impact from vulnerabilities, and enable prompt notification in the event of any unscheduled outage. </p>"},{"location":"ServiceLevelAgreement/#excused-outages","title":"Excused Outages","text":"<p>Licensee may experience outages in the APIsec Platform due to Scheduled Maintenance and/or Emergency Maintenance, as defined below (collectively \u201cScheduled Maintenance\u201d and \u201cEmergency Maintenance''). </p>"},{"location":"ServiceLevelAgreement/#scheduled-maintenance","title":"Scheduled Maintenance","text":"<p>\u201cScheduled Maintenance\u201d means planned interruptions in the APIsec product site to make changes to the systems. APIsec regularly evaluates web site traffic patterns to determine low usage times in which to perform Scheduled Maintenance. Scheduled Maintenance may include outages. The maintenance window schedule can be found on our website at: https://docs.apisec.ai/maintenance-window/</p> <p>Emergency Maintenance</p> <p>\u201cEmergency Maintenance'' refers to APIsec\u2019s efforts to correct network or security conditions that may cause service outages or severe network performance degradation impacting multiple customers and requiring immediate action. Emergency Maintenance may degrade the quality of service, including possible outages. APIsec\u2019s policy is to notify Licensee with as much advance notice as possible under the circumstance before performing the Emergency Maintenance. </p>"},{"location":"ServiceLevelAgreement/#contact-information","title":"Contact Information","text":"Role Name Email Support     Team     support@apisec.ai"},{"location":"SetupGithubTracker/","title":"Github Issue Tracker Set up","text":"<p>This document outlines the steps to setup your Github account with APIsec.  </p> <p><code>Reading time &lt; 3 min</code></p>"},{"location":"SetupGithubTracker/#setup-github-issue-tracker","title":"Setup Github Issue Tracker","text":"<p>The expectation is that you already have an account with Github or know how to set one up.  </p> <ol> <li>From the homepage select your project &gt; Then, select the <code>Configurations</code> tab.</li> <li>Select the <code>Integrations</code> tab from the top menu.</li> <li>From the left menu select <code>Issue Tracker</code>.</li> <li>Choose an Environment Name Profile.</li> <li>Select <code>Github</code> for the Issue Tracker.</li> <li>Create New Issue Tracker Credentials by clicking on the button.  Or, select from the Credentials dropdown if it's already created. You can create a new user with read/write access to the test repository.</li> </ol> <p>Note: You'll need generate an API token to add your Github account. You can find more information how to set up Personal Access Token here.</p> <p></p> <ol> <li>Once you add the credentials, add the Issue-Tracker URL.</li> </ol> <p>The following fields are optional:</p> <ol> <li>Assignee Username.  The Github username of the assignee must be a collaborator with write access.</li> </ol> <p>Activating the toggle button will log the vulnerabilities to Github.</p> <p>Finally, click on <code>Test Credentials</code> button to validate the connection has established and click Save.</p> <p>If everything is setup correctly, you'll see Valid Credentials message at the bottom of the screen.</p> <p></p>"},{"location":"SetupJiraTracker/","title":"Jira Issue Tracker Set up","text":"<p>This document outlines the steps to setup your Atlassian Jira account with APIsec.  </p> <p><code>Reading time 3 min</code></p> <p>For FAQ information on how the Jira integration works, go here.</p>"},{"location":"SetupJiraTracker/#setup-jira-issue-tracker","title":"Setup Jira Issue Tracker","text":"<p>The expectation is that you already have an account with JIRA or know how to set one up.  You can find more information here.</p> <ol> <li>From the homepage select your project &gt; Then, select the <code>Configurations</code> tab.</li> <li>Select the <code>Integrations</code> tab from the top menu.</li> <li>From the left menu select <code>Issue Tracker</code>.</li> <li>Choose an Environment Name Profile.</li> <li>Select <code>Jira</code> for the Issue Tracker.</li> <li>Create New Issue Tracker Credentials by clicking on the button.  Or, select from the Credentials dropdown if it's already created. You can create a new user with read/write access to the test repository.</li> </ol> <p>Note: You'll need the your email and and API token to add your JIRA account (more info on the popup).</p> <p></p> <ol> <li>Once you add the credentials, add the Issue-Tracker URL.</li> <li>Add the Project Key.  Should match the key value from Jira/Atlassian project page.</li> </ol> <p>The following fields are optional:</p> <ol> <li>Assignee Account ID. e.g. https://mycompany.atlassian.net/</li> <li>Label should be a single word without any white spaces. If more than one label to be tagged, provide comma (,) seperated labels.    <code>label1,label2,label3</code></li> </ol> <p>Activating the toggle button will log the vulnerabilities to Jira.</p> <p>Finally, click on <code>Test Credentials</code> button to validate the connection has established and click Save.</p> <p>If everything is setup correctly, you'll see Valid Jira Credentials message at the bottom of the screen.</p> <p></p> <p>Once the account is set up, you'll start to see tickets getting created with any vulnerability that's detected as shown in the screenshot below.</p> <p></p>"},{"location":"SetupProfile/","title":"Set up the Profile","text":"<p><code>Reading time 10 min</code></p> <p>The User Profile configuration options can be found under the User Profile menu on the top right corner of the User Home page. </p> <p></p>"},{"location":"SetupProfile/#121-view-the-activities","title":"12.1. View the Activities","text":"<p>It contains all the activities performed by this user profile. You can view the logs of the activities performed and apply Search filters to optimize the activities list.</p> <p></p> <p>To view the logs of the activity, <code>click</code> on file button under the logs column.  Here is the view of activity logs. </p> <p></p>"},{"location":"SetupProfile/#122-view-account-details","title":"12.2. View Account Details","text":"<p>You can view the account details by clicking on the 'Account' under the user profile menu. </p> <p></p>"},{"location":"SetupProfile/#1221-link-ssookta-account","title":"12.2.1 Link SSO/Okta account","text":"<p>You can link SSO/Okta account with the APIsec account. This option is available in the 'Account' under the User Profile menu. </p> <p></p> <p>A guide on 'How to Configure OKTA SSO for APIsec?' is available which can be accessed by clicking on the question in blue. The link redirects you to a Google doc as shown in the below screenshot. </p> <p></p>"},{"location":"SetupProfile/#123-addedit-users","title":"12.3 Add/Edit Users","text":"<p>APIsec allows the enterprise to add multiple users and assign them different roles. This option is available in the 'Users' under user Profile menu. </p> <p></p> <p>To add a new user, <code>click</code> '+ New User'.</p> <p>The user's name, email and role are required. </p> <p></p> <p>To add bulk new users, <code>click</code> on '+ New Users (Bulk)'. Please follow the given format for adding the user credentials. </p> <p></p> <p>To add a guest user, <code>click</code> on '+ Add Guest User'.</p> <p>Only Email and Role are required for the guest user. APIsec sends the invite to the guest on the given mail. If the guest accepts the invite then the user is added. </p> <p></p> <p>To edit the newly added users or already existing <code>click</code> on 'More' drop-down menu. The drop-down has Edit and Reset Password options. </p>"},{"location":"SetupProfile/#124-addedit-orgs","title":"12.4 Add/Edit Orgs","text":"<p>Only Enterprise Admins can add, edit, and delete organizations in the APIsec database.  Enterprise Admins have the 'Orgs' option under the User Profile menu. This takes the user to the 'Orgs' page. </p> <p></p> <p>At the 'Orgs' page, user can view and edit the existing organizations or add a new one. </p> <p></p> <p>To add a new organization, <code>click</code> '+ New Org' and enter the required credentials.  The notable options here are the:</p> <ul> <li>Enterprise Licenses: Enter the number of API registration licenses provided to the organization. </li> <li>Tag: Eag the organization for identification and segmentation purpose. </li> <li>Playbook monthly execution limit: Enter the monthly max limit for Playbook execution via Scans.</li> </ul> <p><code>click</code> 'Create &amp; Next' at the bottom left corner of the page to save the \"Org Details\" and proceed to \"User Details\" section. </p> <p></p> <p>Enter the \"Name\", \"Email\" and select the role of the user. The role access levels are mentioned explicitly as shown in the below screenshot.  </p> <p>If the user is already registered then <code>click</code> 'Skip' or else <code>click</code> 'Save &amp; Complete'. </p> <p></p> <p>The below screenshot shows the users of the \"Demo\" organization. Here, an Enterprise Admin can 'Edit' the organization and user details. He can also invite a 'Guest User' or add 'New Users'.</p> <p>The details for the the 'New Users' are given in the chapter 12.3.</p> <p></p>"},{"location":"SetupProfile/#125-view-my-profile","title":"12.5 View My Profile","text":"<p>You can view your user profile by visiting 'My Profile' under the user Profile menu. This section also provides the option to view organizatoin access and reset the password.  </p> <p></p> <p>The 'Orgs Access' shows the registered organizations and the access level along with other details. All the registered organizations appear under this tab. </p> <p></p>"},{"location":"SetupProfile/#126-sign-out-the-account","title":"12.6 Sign out the Account","text":"<p>To sign out the account, <code>click</code> 'Sign Out' under the user Profile menu. </p> <p></p> <p>You can request a new password by clicking on 'Forgot Password'. It will prompt to enter the registered email. Once you enter the email, further instructions will be sent to that address. </p> <p></p>"},{"location":"SpecAnalysis/","title":"11. Spec Analysis","text":"Spec Analysis <p>Spec analysis is run when a API spec is uploaded or updated. It's looking for recommendations from a security perspective to either configure something or based on the details defined.</p> Recommendations to configure <p>Something left undefined in an API spec does not indicate a vulnerability in itself. Recommendations to improve the spec are because API testing, both functional and security are based on the spec. What is missing from the spec may not be getting tested sufficiently.   The spec is also the basis of security appliances such as Web Aplication (Layer 7) Firewalls. They filter traffic based on definitions of what should be allowed. The less that is defined the les that is understood and filtered.</p> <p>Example: No auth schemes are configured. Without any auth schemes configured it's diffocult for testing tools to understand the context of what requires auth and does not and at what level. This context is significant for generating relevent recommendations.</p> Secuity issues based on API Spec <p>The spec file is analyzed for anything that can be determined by looking at the spec by itself, before scanning. This is from the perspective that the spec is correctly defined. Any recommendations on a spec that not defined correctly should prompt correcting the spec.</p> <p>Example: Sensitive data sent over GET method. Parameters sent in the URL aren't secure from interception. </p>"},{"location":"Teams/","title":"Teams","text":"<p>The Teams screen is used to create and manage teams of users. The purpose of this is to enable easier management of access to projects for teams of users. Instead of adding a user one at a time as collaborator at projects, if a user is part of team that is assigned to an API group, they automatically will receive Project Collaborator access to the API Projects that are members of the group.</p> <p></p> <p>In order to create a new team, navigate to the Teams Sceen (Dashboard--&gt;Configurations--&gt;Teams) and click the New Team button. Fill in the Name, Description and select the users(s) that  should be part of this team. Then click Create.</p> <p></p> <p>In order to edit a team, simply click the row that you are interested in editing and make the appropriate changes.</p>"},{"location":"Token%20Generation%20Code/","title":"How to Add Token Generation Code","text":"How to Add Token Generation Code  <p> By Feroz Syed on March 23,2021 </p>"},{"location":"Token%20Generation%20Code/#step-1-provide-a-curl-for-generating-token","title":"Step 1: Provide a curl for generating token","text":"<p>Sample command:</p> <p>curl -s -d \u2018{\u201cusername\u201d:\u201dadmin\u201d, \u201cpassword\u201d:\u201dsecret\u201d}\u2019 -H \u201cContent-Type: application/json\u201d -H \u201cAccept: application/json\u201d  -X POST https://ip/user/login</p>"},{"location":"Token%20Generation%20Code/#step-2-provide-token-extraction-logic-using-grepjq","title":"Step 2: Provide Token extraction logic using grep/jq","text":"<p>If the Step 1 response look like this</p> <p>{\u201ctime\u201d: \u201c1594073751605\u201d, \u201cinfo\u201d: {\u201ctoken\u201d: \u201cval\u201d}}.</p> <p>and your token path is \u201cinfo.token\u201d you can use json parser (jq) to extract the token. Alternatively, you can also use  \u201cgrep\u201d to extract the value. For example:</p> <p>curl -s -d \u2018{\u201cusername\u201d:\u201dadmin\u201d, \u201cpassword\u201d:\u201dsecret\u201d}\u2019 -H \u201cContent-Type: application/json\u201d -H \u201cAccept: application/json\u201d -X POST https://ip/user/login | jq \u2013raw-output \u201c.info.token\u201d</p>"},{"location":"Token%20Generation%20Code/#step-3-provide-a-token-usage-example","title":"Step 3: Provide a token usage example.","text":"<p>curl \u2013location \u2013request GET \u2018https://ip/api/users\u2019 -H \u2018X-API-KEY: &lt;&gt;\u2019</p>"},{"location":"Token%20Generation%20Code/#step-4-wrapping-your-logic-in-cmd","title":"Step 4: Wrapping your logic in @Cmd","text":"<p>You can wrap your entire Step 2 content using the @Cmd syntax. And it will be evaluated at runtime before running the Playbooks.</p> <p>Usage:</p> <p>X-API-KEY: {{@Cmd | Step-2-content }}</p> <p>or</p> <p>Authorization: Bearer {{@Cmd | Step-2-content }}</p> <p>Sample code:</p> <p>Authorization: Bearer {{@Cmd | curl -s -d \u2018{\u201cusername\u201d:\u201dadmin\u201d,\u201dpassword\u201d:\u201dsecret\u201d}\u2019 -H \u201cContent-Type: application/json\u201d -H \u201cAccept: application/json\u201d -X POST https://ip/user/login | jq \u2013raw-output \u201c.info.token\u201d }}</p>"},{"location":"Token%20Generation%20Code/#step-5-using-cmdcache","title":"Step 5: Using @CmdCache","text":"<p>@CmdCache is similar to @Cmd, but it caches the token for 5 minutes and reuses it across multiple Playbooks.</p> <p>Usage:</p> <p>X-API-KEY: {{@Cmd | Step-2-content }}</p> <p>or</p> <p>Authorization: Bearer {{@Cmd | Step-2-content }}</p> <p>Sample code:</p> <p>Authorization: Bearer {{@CmdCache | curl -s -d \u2018{\u201cusername\u201d:\u201dadmin\u201d,\u201dpassword\u201d:\u201dsecret\u201d}\u2019 -H \u201cContent-Type: application/json\u201d -H \u201cAccept: application/json\u201d -X POST https://ip/user/login | jq \u2013raw-output \u201c.info.token\u201d }}</p>"},{"location":"Token%20Generation%20Code/#step-6-using-vault-for-secure-password-usage","title":"Step 6: Using @Vault for secure password usage.","text":"<p>Create a key-value pair in Vault and inject it using this syntax.</p> <p>Usage:</p> <p>[[@Vault.ORG-NAME/KEY-NAME]]</p> <p>e.g.</p> <p>Authorization: Bearer {{@CmdCache | curl -s -d \u2018{\u201cusername\u201d:\u201dadmin\u201d,\u201dpassword\u201d:\u201d[[@Vault.ORG-NAME/KEY-NAME]]\u201d}\u2019 -H  \u201cContent-Type: application/json\u201d -H \u201cAccept: application/json\u201d -X POST https://ip/user/login | jq \u2013raw-output \u201c.info.token\u201d }}</p> <p>Note: If the request body contains 2 or more opening/closing curly brackets together. Make sure to escape them using spaces  e.g. {{ -&gt; { {.</p>"},{"location":"UserLoginServiceUnavailable/","title":"Resolving Service Unavailable Error Upon User Login","text":"Service Unavailable Error When Login To APIsec <p> By Feroz Syed on September 05,2022 </p>"},{"location":"UserLoginServiceUnavailable/#problem-statement","title":"Problem Statement:","text":"<p>Suppose you encounter a \"Service Unavailable\" error when trying to login to the APIsec Console.</p>"},{"location":"UserLoginServiceUnavailable/#solution","title":"Solution:","text":"<p>It is most likely that one or more duplicate accounts with the same email address you are trying to log in already exist in APIsec. APIsec has added a restriction to prevent users from creating an account with an existing email Id. However, the duplicate accounts created before adding a regulation should be disabled manually by an administrator.</p>"},{"location":"UserLoginServiceUnavailable/#follow-these-steps","title":"Follow These Steps:","text":"<ol> <li>Log into the APIsec console.</li> <li>Click on your name in the upper right corner to expand the menu and select Users.</li> <li>Search and edit the user account with the duplicate email by clicking More.</li> <li>Set the status from Active to Inactive and click Save.</li> </ol>"},{"location":"UserLoginServiceUnavailable/#summary","title":"Summary","text":"<p>Duplicate user Accounts are restricted as it leads to user login errors. Existing duplicate accounts shall be disabled.</p>"},{"location":"UserLoginServiceUnavailable/#note","title":"Note","text":"<p>Ensure the primary account you would like to continue using is Active and if required, request the administrator to reset the password.</p>"},{"location":"UserPermissions/","title":"Role permissions","text":""},{"location":"UserPermissions/#user-roles-and-their-permissions","title":"User Roles and their permissions","text":"<p>There are 4 roles in APIsec. Admin, Project Manager, User and Basic.  Below is a chart showing various system activities of the 1st 3 roles. Basic role is not used.</p> Functionality Use Case User Project Manager Admin Login Login with SSO Y Y Y Login with a temporary password Y Y Y Login with password-only Y Y Y Login with a password and 2FA Y Y Y Recover Credentials Forgot Password Y Y Y User Onboarding Add New User N N Y Add New Users(Bulk) N N Y Add Guest User N N Y Remove Guest User N N Y Reset Password - Local User N N Y Modify Role - Local User N N Y Modify Role - Guest User N N Y Activate - Local User N N Y Deactivate - Local User N N Y Activate - Guest User N N Y Deactivate - Guest User N N Y Activate 2FA - Local User N N N Deactivate 2FA - Local User N N N API Onboarding API Registration via API Gateway N Y Y API Registration via Spec URL/File N Y Y Add Environment N Y Y Clone Environment N Y Y Update Environment - Base URL N Y Y Delete Environment N Y Y Update Environment - Add/Update Authentication N Y Y Update Environment - Delete Authentication N Y Y Update Environment - Disable Authentication View Environment &amp; Authentication Y Y Y Manage Variables N Y Y Manage Profiles N Y Y Schedule Job - Daily / Weekly / Monthly N Y Y API Configurations Configure Categories- Activate / Deactivate Category- Re-Sync Category- Configure Scenarios / Tests- Update Assertions- Update Severity- Activate / Deactivate Show Responses- Activate / Deactivate Skip Filing Vulnerability N Y Y Manage Playbooks- Generate Playbooks- Delete Playbooks N Y Y Manage Payloads- Update Payloads- Lock and Save Payloads- Unlock and Save Payloads N Y Y Project Management Rename Project N Y Y Delete Project N Y Y Add collaborators to a Project N Y Y Reload Specification N Y Y View Spec Comparision Report Y Y Y View Spec Analysis Y Y Y View Activity Logs Y Y Y Scans View All Scans Y Y Y Delete Scan N Y Y Run an ad-hoc scan Y Y Y Rescan Y Y Y Reports Send Summary Report Y Y Y Send Detail Report Y Y Y Send Penetration Test Report Y Y Y Send Developer Report Y Y Y Send Compliance Report Y Y Y View Summary Report Y Y Y Download Summary Report Y Y Y Download All Vulnerabilities Y Y Y Download All Endpoints Y Y Y Download All APIs Y Y Y Integrations Configure Playbook Backup Integration N Y Y Configure Issue Tracker Integration N Y Y Configure Notifications N Y Y Configure Report Storage N Y Y Global Integrations Configure Playbook Backup Integration N Y Y Configure Issue Tracker Integration N Y Y Configure Notifications N Y Y Configure Report Storage N Y Y Configure API Gateway N Y Y Add / Remove Skip Endpoints N Y Y Configure Teams N Y Y Configure API Groups N Y Y Configure SSO N Y Y Enforce 2FA N Y Y Scanners Manage Scanners- Create Scanner- Delete Scanner N Y Y Vault Manage Secrets N N Y Private Categories Manage Private Category- Author and Save as Draft- Rebuild and Launch N Y Y Security Center View Security Center Y Y Y"},{"location":"Vault/","title":"8. Vault","text":"<p><code>Reading time 2 min</code></p> <p>You can securely store and use API keys and credentials, tokens, passwords, and key-value pairs. APIsec vault is just like a password manager that securely stores all your credentials for ease of access. </p> <p></p> <p>In the below screenshot, you can see all the stored credentials. When you integrate an account with your APIsec account the credentials are automatically stored in the vault. </p> <p></p> <p>APIsec also allows you to add new credentials in the vault for later use. </p> <p>To add new credentials:</p> <ol> <li><code>click</code> '+ New Credentials'.    </li> <li>Provide the name you would like to associate with the credentials. It is recommended to provide unique names for the ease of identification.     </li> <li>Select the account type against those credentials.     There are number of account types available for API Gateways, Version Control,     Notifications, Scanner Deployment, Issue Trackers, Report Storage, and Notifications.</li> </ol> <p>Github was selected for this example Version Control. This account type only requires name and personal access token (PAT).     You can read the GitHub official documentation by clicking 'learn more' for generating the PAT. </p> <p>Note: The credentials requirement varies according to the account type. Also, it is advised to provide the mandatory and optional account credentials for smooth integration. </p> <p>   4. <code>click</code> 'Create' and the credentials will be successfully added in the vault. </p> <p> </p>"},{"location":"Vault/#how-to-use-vault-for-secure-password-management","title":"How to Use Vault for Secure Password Management","text":"<p>  Once a key-value pair is created in Vault, follow these steps to integrate it into your authentication settings:    1. Navigate to the project for which the authentication key has been saved in the vault.     2. Go to Configurations &gt; Environments &gt; Envs and Creds     3. Click on an authentication and select the appropriate Authentication Type.     4. Replace the key value with the following Vault syntax:    Usage:     [[@Vault.ORG-NAME/KEY-NAME]]       Ensure that ORG-NAME is replaced with your organization\u2019s name and KEY-NAME with the specific key name stored in Vault.      In the screenshot below, you can see an example of how to use the Vault syntax in your authentication settings.    </p> <p>  By following these steps, you can securely reference stored credentials without exposing sensitive information in your project configurations.</p>"},{"location":"Vault/#how-does-apisec-keep-items-in-your-vault-secure","title":"How does APIsec keep items in your vault secure?","text":"<p>   APIsec stores the vault data in a postgreSQL database encrypted using PGP with a symmetric key.    APISec passes a secret key (called as session key) DB to encrypt and decrypt. The Key and its size can't be revealed.   For more details on how the PGP Encrption works refer Section \"F.28.3. PGP Encryption Functions\" at https://www.postgresql.org/docs/current/pgcrypto.html</p>"},{"location":"add-ca-certificate/","title":"Add Self-Signed certificates to APIsec-scanner","text":"<pre><code># Adding Self-Signed CA Certificates to a Running Docker Container\n\nThis document outlines the steps to dynamically add self-signed CA certificates to a running Docker container without modifying the Docker image. The process includes mounting the certificates, updating the trusted certificates, and verifying the installation.\n\n## Prerequisites\n\n- A running Docker container.\n- A self-signed CA certificate (e.g., `my-ca.crt`).\n- Docker CLI installed on the host machine.\n\n## Steps to Add Self-Signed CA Certificates\n\n### 1. Prepare the Self-Signed CA Certificate\n\nEnsure that you have the self-signed certificate file, e.g., `my-ca.crt`, available on your host machine.\n\n### 2. Start the Docker Container with Certificate Mount\n\nYou can mount the certificate directly into the running container by using a volume. Run or restart the container with the following command:\n\n```bash\ndocker run --name apisec-scanner -d -e FX_HOST=scanner.apisec.ai -e FX_PORT=443 -e FX_IAM=kljXaR6FRBIdztHfFIUnb+KAuf5HKuto -e FX_KEY=&lt;FX_KEY&gt; -v /host/path/to/my-ca.crt:/usr/local/share/ca-certificates/my-ca.crt:ro apisec/scanner:latest\n</code></pre> <p>Explanation: - <code>/host/path/to/my-ca.crt</code>: Path on the host machine where the certificate is located. - <code>/usr/local/share/ca-certificates/my-ca.crt</code>: Path inside the container where certificates are typically stored. - <code>:ro</code>: Mounts the certificate as read-only inside the container.</p> <p>Alternatively, you can copy the certificate directly to the container:</p> <pre><code>docker cp /root/opt/my-ca.crt &lt;container_id&gt;:/usr/local/share/ca-certificates/my-ca.crt\n</code></pre> <p>Set read-only permissions inside the container:</p> <pre><code>docker exec -it &lt;container_id&gt; chmod 444 /usr/local/share/ca-certificates/my-ca.crt\n</code></pre> <p>Explanation: - <code>chmod 444</code>: Makes the file readable by everyone but not writable or executable.</p>"},{"location":"add-ca-certificate/#3-update-trusted-certificates-inside-the-running-container","title":"3. Update Trusted Certificates Inside the Running Container","text":"<p>After mounting or copying the certificate, you need to update the trusted certificate store inside the container. Execute the following commands:</p> <pre><code>docker exec -it my_container bash\n</code></pre> <p>Once inside the container:</p> <pre><code>update-ca-certificates\n</code></pre> <p>This will update the trusted certificates store to include your newly added certificate.</p> <p>Exit the container by typing:</p> <pre><code>exit\n</code></pre>"},{"location":"add-ca-certificate/#4-verify-the-certificate-is-added","title":"4. Verify the Certificate is Added","text":"<p>To confirm that the CA certificate has been successfully added, you can run the following command to check the connection to a secure site:</p> <pre><code>docker exec my_container openssl s_client -connect some-secure-site:443 -CAfile /etc/ssl/certs/ca-certificates.crt\n</code></pre> <p>This command will verify that the container is able to establish a secure connection using the newly added certificate.</p>"},{"location":"add-ca-certificate/#notes","title":"Notes","text":"<ul> <li>This method avoids the need to rebuild the Docker image.</li> <li>The certificate will persist only while the container is running. Restarting the container with the volume mount will ensure the certificate is included again.</li> </ul>"},{"location":"adding-endpoints-via-cli/","title":"Add Endpoints via cURL","text":""},{"location":"adding-endpoints-via-cli/#overview","title":"Overview","text":"<p>This document outlines the steps that are needed to add an endpoint using the command line. For adding endpoints using the UI, refer to the 'Add Endpoints - UI' section from the left hand navigation.</p>"},{"location":"adding-endpoints-via-cli/#using-command-line-to-add-endpoints","title":"Using command line to add endpoints","text":"<p>Prerequisite - Register an API</p> <p>Before using the CLI, the user must have registered an API from the UI.</p> <p>Register a new API project in APIsec using the JSON API documentation located in the APIsec/On-Prem at /Netbanking/NBEnhancement2Test.json</p> <p>Generate an access token</p> <p>curl --location --request POST 'https://<code>&lt;APIsec On-Prem URL&gt;</code>/auth/login' --header 'Content-Type: application/json' --data-raw '{\"username\":\"<code>&lt;username&gt;</code>\",\"password\":\"<code>&lt;password&gt;</code>\"}'</p> <p>Get Project ID</p> <p>Get the Project ID of the API Project registered in Step 1. The easiest way is to find it in the UI by navigating to the project and extracting it from the URL:</p> <p>Format:</p> <pre><code>https://cloud.apisec.ai/#/app/projects/&lt;project-id&gt;/dashboard\n</code></pre> <p>Note:  Replace the  from the UI by following the details below after an API is registered: <p>https://cloud.apisec.ai/#/app/projects/8adc83a083ca93f30183d73048333ab8/dashboard</p> <p>From the URL the Project ID is: 8adc83a083ca93f30183d73048333ab8</p> <p>Add Endpoint using cURL</p> <p>The User will call the APIsec API endpoint via this example cURL or similar programming script.  The format of the request will be:</p> <p>curl --location --request POST 'https://<code>&lt;APISecOn-PremURL&gt;</code>/api/v1/endpoint/project/<code>&lt;ADD-Project-ID&gt;</code>' \\ --header 'Authorization: Bearer <code>&lt;token&gt;</code> \\ --header 'Content-Type: application/json' \\ --data-raw '[{        \"endpoint\":\"get:/api/v1/orgs/{id}/users?page=0&amp;pageSize=20\"     }     ]'</p> <p>After you execute the command</p> <p>Confirm that API returns a successful completion message.</p> <p>Login to the APIsec portal, access the corresponding project, and confirm the addition of the new endpoints.</p> <p>Execute the Unsecured Endpoints security category and confirm successful completion of the tests.</p>"},{"location":"docker-scanner-deployment/","title":"Docker Swarm Scanner Deployment","text":"<p><code>Reading time &lt; 1 min</code></p>"},{"location":"docker-scanner-deployment/#deploying-apisec-scanner-as-a-docker-swarm-service","title":"Deploying APIsec Scanner as a Docker Swarm Service","text":"<p>Please use the below Yaml file format for deploying the APIsec Scanner as a Docker Swarm Service. Make sure to update the placeholders <code>&lt;ScannerName&gt;</code>, <code>&lt;FX_IAM_VALUE&gt;</code>, and <code>&lt;FX_KEY_VALUE&gt;</code> with your specific values.</p> <pre><code>version: '3.5'\nservices:\n  &lt;ScannerName&gt;:\n    image: \"apisec/scanner:latest\"\n    deploy:\n      replicas: 1\n      restart_policy:\n        condition: on-failure\n        delay: 5s\n        max_attempts: 3\n        window: 120s\n      placement:\n        constraints: [node.role == manager]\n    environment:\n      - FX_HOST=cloud.apisec.ai\n      - FX_IAM=&lt;FX_IAM_VALUE&gt;\n      - FX_KEY=&lt;FX_KEY_VALUE&gt;\n</code></pre>"},{"location":"efs-fargate-scanner/","title":"AWS Fargate Scanner with EFS","text":""},{"location":"efs-fargate-scanner/#mounting-efs-file-system-with-apisec-scanner-deployed-on-aws-fargate","title":"Mounting EFS File System with APIsec Scanner Deployed on AWS Fargate","text":"<p>This guide will walk you through the process of mounting an AWS Elastic File System (EFS) to a container in ECS (Fargate) with detailed instructions with screenshots attached.</p>"},{"location":"efs-fargate-scanner/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Overview</li> <li>Prerequisites</li> <li>Step 1: Create an EFS File System</li> <li>Step 2: Configure ECS Task Definition to Mount EFS</li> <li>Step 3: Place Script inside the EFS</li> <li>Step 4: Deploy ECS Fargate Service</li> <li>Troubleshooting</li> <li>Conclusion</li> </ul>"},{"location":"efs-fargate-scanner/#overview","title":"Overview","text":"<p>Amazon EFS provides scalable file storage that can be mounted to containers running in ECS. This guide will show you how to: - Create an EFS file system. - Configure ECS Task Definitions to mount EFS. - Update your ECS service to use EFS.</p>"},{"location":"efs-fargate-scanner/#prerequisites","title":"Prerequisites","text":"<p>Before starting, ensure you have: - An AWS Account. - ECS Cluster set up with Fargate. - EFS created in the same region as your ECS cluster. - Proper IAM Role permissions.  </p>"},{"location":"efs-fargate-scanner/#step-1-create-an-efs-file-system","title":"Step 1: Create an EFS File System","text":"<ol> <li> <p>Go to the AWS Console and navigate to EFS (Elastic File System).    </p> </li> <li> <p>Create a new EFS File System by clicking the Create file system button.</p> </li> <li>Select the VPC in which your ECS cluster is running.</li> </ol> <p></p> <ol> <li>Configure Network and Mount Targets:</li> <li>Select the customize button to configure the Regional or One Zone, Network &amp; other configuration.</li> <li>Select the appropriate Availability Zones and Subnets. Regional is recommended for high availability.</li> <li>For each subnet, choose the appropriate security group to allow NFS access (port 2049).</li> </ol> <p></p> <ol> <li>Configure Access Points and Security Groups to ensure the EFS can be accessed by your ECS tasks.</li> <li>Set the Access Point and note down the File System ID.</li> <li>Attach a security group that allows NFS traffic (port 2049) for the selected VPC CIDR range like 172.31.0.0/16 or respective security-group id of Fargate task/service for NFS communication with the Fargate tasks/service.</li> <li>create EFS in the same VPC as Fargate tasks/services and the same security group to keep it simple.</li> </ol> <p></p> <ol> <li>Inbound Rules<ul> <li>Go to the Security Groups</li> <li>Click on your Security Group ID</li> <li>Edit Inbound rules</li> </ul> </li> </ol> <p></p> <p>Outbound Rules    - Edit Outbound Rules  </p> <p>Please add other relevant rules as per your requirement for other services communication.</p> <ol> <li>VPC settings<ul> <li>Go to the VPC</li> <li>Select your VPC</li> <li>Click On Edit VPC Settings</li> </ul> </li> </ol> <p></p> <p>make sure the below options are selected/enabled in the VPC Settings.  - DNS resolution  - DNS hostname  - DHCP option set</p> <p></p>"},{"location":"efs-fargate-scanner/#step-2-configure-ecs-task-definition-to-mount-efs","title":"Step 2: Configure ECS Task Definition to Mount EFS","text":"<ol> <li>Open ECS Task Definition in the AWS Console.</li> </ol> <ol> <li>Create New Task Definition or Edit the existing one to create a new revision:</li> <li>Select Elastic File System (EFS).</li> <li>Give Task definition name</li> <li>Choose AWS Fargate as the launch type.</li> <li>Set Task Memory and Task CPU based on your application's requirements (1vCPU &amp; 2GB memory recommended).</li> </ol> <ul> <li>In the Container section write any container name and image URI: apisec/scanner:latest</li> <li>And Add the below environment variables.</li> <li>FX_HOST=scanner.apisec.ai</li> <li>FX_PORT=443</li> <li>FX_IAM=&lt;FX_IAM&gt;</li> <li>FX_KEY=&lt;FX_KEY&gt;      For FX_IAM and FX_KEY see the scanner page in the APIsec product UI https://cloud.apisec.ai/#/app/scanners/list</li> </ul> <ol> <li>Configure Volume:</li> <li>Provide a volume name and choose your EFS file system.</li> <li>Select Volume Type as NFS.</li> <li>Select File System ID from the dropdown.</li> <li>Root Directory as <code>/mnt/efs</code></li> </ol> <p>    - Click on Create button    -</p>"},{"location":"efs-fargate-scanner/#step-3-place-the-script-inside-the-efs","title":"Step 3: Place the Script inside the EFS","text":"<ul> <li> <ol> <li>Access EFS via an EC2 Instance:</li> </ol> </li> <li>Launch an EC2 instance in the same VPC as your Fargate tasks, with an appropriate security group allowing NFS access.</li> <li> <p>SSH into the EC2 instance.</p> </li> <li> <p>Mount the EFS File System on the EC2 Instance:</p> </li> <li>Install the NFS client on the EC2 instance:      <code>bash      sudo yum install -y nfs-utils  # For Amazon Linux      sudo apt-get install -y nfs-common  # For Ubuntu/Debian</code></li> <li> <p>Mount the EFS file system:      <code>bash      sudo mkdir /mnt/efs      sudo mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport fs-&lt;EFS-File-System-ID&gt;.efs.&lt;region&gt;.amazonaws.com:/ /mnt/efs</code></p> </li> <li> <p>Copy Your Script to the EFS File System:</p> </li> <li> <p>Upload your script to the mounted EFS directory:      <code>bash      sudo cp /path/to/your-script.sh /mnt/efs/</code></p> </li> <li> <p>Unmount the EFS:    Once the file is copied, unmount the file system:    <code>bash    sudo umount /mnt/efs</code></p> </li> </ul>"},{"location":"efs-fargate-scanner/#step-4-deploy-ecs-fargate-service","title":"Step 4: Deploy ECS Fargate Service","text":"<ol> <li>Create a New Service or Update an Existing One:</li> <li>Go to the ECS console.</li> <li>Select Clusters and choose your cluster.</li> <li>You can create a new Service or update an existing one to use the task definition with the EFS mount created in </li> <li>Click Create to launch the Fargate service with your task definition.</li> </ol>"},{"location":"efs-fargate-scanner/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues, consider the following: - Check EFS Security Groups: Ensure that the security groups associated with the Fargate tasks and EFS allow traffic on port 2049 (NFS). - Task Role Permissions: Ensure your Fargate task role has appropriate permissions to use EFS (if using IAM authorization). - Container Logs: Use ECS logs to troubleshoot any issues with the EFS mount in the Fargate task.</p>"},{"location":"efs-fargate-scanner/#conclusion","title":"Conclusion","text":"<p>You\u2019ve successfully mounted an AWS EFS to an ECS service. This setup allows your ECS tasks to share data across multiple containers or persist data using EFS.</p> <p>If you have any questions or run into issues, please consult the AWS EFS Documentation or AWS ECS Documentation.</p>"},{"location":"fargate-scanner/","title":"AWS Fargate Scanner Deployment","text":"<p># APIsec AWS Fargate</p>"},{"location":"fargate-scanner/#run-apisec-scanner-as-an-aws-fargate","title":"Run APIsec Scanner as an AWS Fargate","text":"<ul> <li>Login to AWS Account.</li> <li>Select Amazon Elastic Container Service (ECS).</li> <li>Select Clusters.</li> <li>Click on Create Cluster.</li> </ul> <ul> <li>Give a Unique Cluster Name.</li> <li>In Infrastructure Select AWS Fargate (serverless)</li> </ul> <ul> <li>Create New Task Definitions.</li> </ul> <ul> <li>Specify a Unique task name.</li> <li>Select Launch type as AWS Fargate.</li> <li>Select 1 vCPU &amp; 2GB memory.</li> </ul> <ul> <li>Add Container.</li> <li>Give Unique Container name, Image name(fxlabs/bot:latest).</li> <li>Add below Environment variables from APIsec scanner.</li> <li>FX_HOST, FX_PORT, FX_IAM &amp; FX_KEY</li> </ul> <ul> <li>Click on Create.</li> <li>Go back to the Cluster &gt; Click on the Newly created Cluster name.</li> <li>Go to the Tasks tab and Click on Run new task</li> </ul> <ul> <li>Select Launch Type as FARGATE and Deployment Configuration as Task then Click Create</li> </ul> <ul> <li>Click on Check Status from the APIsec Scanner page.</li> <li>You will see the status is OK</li> </ul> <ul> <li>Now you can run scans on this scanner from the APIsec project.</li> </ul> <p>!!! info \"Note\"</p> <ul> <li>If Auto-assign public IP is selected as disabled, the container will be in a stop state.</li> <li>To Delete the cluster, you need to stop the TASK first.</li> </ul>"},{"location":"jupiter-one-integration/","title":"JupiterOne IT Integration","text":"<p>Step1: Go to the Integrations section in the APIsec platform and select Issue Tracker from the left-side menu.</p> <p>Step2: Select JupiterOne from the issue tracker dropdown as shown in the image below.</p> <p></p> <p>Step3: For adding Jupiter one credential click New Issue Tracker Credentials button. It will open a window as shown below.</p> <p></p> <p>Enter the name, select Issue Tracker type as JupiterOne and add the API key. In order to get the API key click here is a hyperlink, it will navigate to the Jupiter one account key section as shown below.</p> <p></p> <p>Create a new key by clicking the Plus icon on the right top. After creating the key copy and paste it into the APIsec platform and save the details.</p> <p>Step4: After adding the key, select the Issue Tracker credentials added in step 3 and add the account Id.</p> <p></p> <p>To get an account Id, click here hyperlink to navigate to the account management page on Jupiter one platform as shown below.</p> <p></p> <p>Copy the Account Id and paste it into the APIsec platform. And hit the Test Credentials button, if it says Valid credentials, the configuration is successful and APIsec is ready to log Vulnerabilities in JupiterOne.</p>"},{"location":"k8s-scanner-deployment/","title":"K8s Scanner Deployment","text":"<p><code>Reading time &lt; 1 min</code></p>"},{"location":"k8s-scanner-deployment/#apisec-scanner-as-kubernetes-deployment","title":"APIsec Scanner as Kubernetes Deployment","text":"<p>Please use the below Yaml file format for deploying the APIsec Scanner as a Kubernetes Deployment. Make sure to update the placeholders <code>&lt;ScannerName&gt;</code>, <code>&lt;FX_IAM_VALUE&gt;</code>, and <code>&lt;FX_KEY_VALUE&gt;</code> with your specific values.</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n name: &lt;ScannerName&gt;\nspec:\n replicas: 5\n selector:\n   matchLabels:\n     app: &lt;ScannerName&gt;\n template:\n   metadata:\n     labels:\n       app: &lt;ScannerName&gt;\n   spec:\n     containers:\n       - name: &lt;ScannerName&gt;\n         image: apisec/scanner:latest\n         imagePullPolicy: IfNotPresent\n         env:\n         - name: FX_HOST\n           value: \"cloud.apisec.ai\"\n         - name: FX_IAM\n           value: \"&lt;FX_IAM_VALUE&gt;\"\n         - name: FX_KEY\n           value: \"&lt;FX_KEY_VALUE&gt;\"\n</code></pre>"},{"location":"linear-it-configuration/","title":"Linear IT Configuration","text":"<p>Step1: Go to the Integrations section in the APIsec platform and select Issue Tracker from the left-side menu.</p> <p>Step2: Select Linear from the issue tracker dropdown as shown in the image below.</p> <p></p> <p>Step3: For adding Linear credentials click New Issue Tracker Credentials button. It will open a window as shown below.</p> <p></p> <p>Enter the name, select Issue Tracker type as Linear and add the API key. In order to get the API key click here is a hyperlink, it will navigate to the Linear API key section as shown below.</p> <p> Create a new API key and copy &amp; paste it into the APIsec platform and save the details.</p> <p>Step4: After adding the key, select the Issue Tracker credentials added in step 3 and add the team Id.</p> <p>To get the team Id select the team in linear and hit CMD+k or CTRL+k it will open the dialogue and type Copy model UUID and select developer as shown below.</p> <p></p> <p>After that, it will show the team name with the Id as shown in the image below.</p> <p></p> <p>Select the team it will copy the UUID and add it to the APIsec platform.</p> <p></p> <p>Hit the Test Credentials button, if it says Valid credentials, the configuration is successful and APIsec is ready to log Vulnerabilities in the Linear platform.</p>"},{"location":"maintenance-window/","title":"Maintenance Window","text":"<p>APIsec is committed to a continuous delivery cycle and as such will have a nightly maintenance window. The following tasks are executed during the maintenance windows:</p> <ul> <li>Application and scanner deployments.</li> <li>UX, bug fixes, enhancements, and new feature deployments,</li> <li>Configuration changes related to security and usability are applied.</li> </ul> <p>Service status during the maintenance windows:</p> <ul> <li>All updates are triggered automatically and/or done by the APIsec staff.</li> <li>All updates are applied as rolling updates resulting in minimal downtime, if any. </li> <li>All changes pre and post-deployments are automatically tested by our continuous test automation suite.  If we determine any deficiences, an automatic rollback is triggered.</li> <li>If you experience service issues during the maintenance window, please wait a few minutes and try again.</li> </ul>"},{"location":"maintenance-window/#maintenance-window-times","title":"Maintenance Window Times","text":"<p>APIsec currently is using the following maintenance times:</p> <pre><code>- 2:30 AM PST to 3:00 AM PST (half hour) Monday - Saturday\n- 2:30 AM PST to 3:30 AM PST (one hour) Sunday\n</code></pre>"},{"location":"oas-ibm-datapower/","title":"Getting OAS for an API from IBM DataPower","text":"<p><code>Reading time 2 min</code></p>"},{"location":"oas-ibm-datapower/#overview","title":"Overview","text":"<p>The IBM API Connect supports two gateway types: DataPower Gateway (v5 compatible) and DataPower API Gateway.</p> <ul> <li>DataPower API Gateway is a new gateway with the same security focus as DataPower Gateway (v5 compatible), with some limitations. - This is the one that connects with OAS.</li> <li>DataPower Gateway (v5 compatible) has been available with IBM API Connect for a number of years.  - No support for OpenAPI</li> </ul>"},{"location":"oas-ibm-datapower/#datapower-api-gateway","title":"DataPower API Gateway","text":"<p>OpenAPI 3.0 support in IBM API Connect</p> <p>OpenAPI 3.0 API support is provided by the DataPower API Gateway only but it has some limitations.  There is no OpenAPI 3.0 API support with the DataPower\u00ae Gateway (v5 compatible).  OpenAPI 3.0 APIs can be validated in the local file system by using the apic validate command provided by the developer toolkit CLI.  </p> <p>Limitations</p> <ul> <li>User interface limitations</li> <li>Limitations for APIs that are enforced by the DataPower API Gateway</li> </ul>"},{"location":"oas-ibm-datapower/#how-to-get-oas","title":"How to get OAS?","text":"<p>OAS definitions are created in the IBM API Connect, which is done either by using the API Designer UI application, or by using the browser based API Manager UI.</p> <p>For API Manager, the specifications for the APIs and Products are stored on the management server. For API Designer, the specifications for the APIs and Products are stored in the directory that you specified when you logged in. </p>"},{"location":"oas-ibm-datapower/#connect-swaggerhub-with-ibm-api-connect","title":"Connect SwaggerHub with IBM API Connect","text":"<p>SwaggerHub connects with IBM API Connect to design and collaborate on the API definition, and then synchronize it with IBM Cloud to create an API Gateway.</p> <ol> <li>SwaggerHub requires an API key.</li> <li>From IBM Cloud &gt; create an API key.</li> <li>Copy/download the key and added in SwaggerHub.</li> <li>In SwaggerHub, synchronize the API definition with IBM API connect.</li> <li>Once the APIs are published in IBM Cloud, the APIs will be available for external use.</li> </ol>"},{"location":"oas-ibm-datapower/#references","title":"References","text":"<p>API Connect Gateway Types</p> <p>SwaggerHub with IBM API Connect</p>"},{"location":"scanner-sizing/","title":"Scanner Sizing Recommendations","text":"<p>Scanner Sizing Recommendations</p> <p> By Mohammed Jameel on Oct 17,2022 </p> <ul> <li>Scanners without resource limit will be faster to complete the jobs.</li> <li>Below chart shows the execution time of playbooks with different resource limits.</li> </ul> Cluster Count/Size No of Playbooks Duration in Seconds CPU Request CPU Limit Memory Request Memory Limit 1 75 158s 5m 100m 256Mi 500Mi 1 75 100s 5m 100m 500Mi 1000Mi 1 75 43s No Limit No Limit No Limit No Limit"},{"location":"setup-postman/","title":"Postman Set Up","text":"<p>The APIsec platform helps you integrate with wide range of applications that connect with your API Gateway. Let's start by registering the Postman APIs.  </p> <p>First, add your Postman credentials as described in chapter 8, Vault section. Note: In the dropdown menu, the Postman option will be under the API Gateway section.</p> <p>Once you have your credentials setup, from the homepage, click on the API Gateway. Look for the Postman setup with the name you have created above. Click on that and your APIs from Postman should be listed.</p> <p></p> <p>Register those APIs and you'll be redirected to the homepage.  </p> <p></p> <p>During this proces, the APIsec will be writing the customized validations for the APIs (this step may take a few minutes to complete).  You'll be redirected to the homepage.</p> <p></p> <p>Click on project and start with your first scan.</p>"},{"location":"synopsis-code-dx/","title":"Synopsis Code DX Integration","text":"<p>Step1: Go to the Integrations section in the APIsec platform and select Issue Tracker from the left-side menu.</p> <p>Step2: Select any issue tracker to view New Issue Tracker Credentials button as shown in the image below.</p> <p></p> <p>Step3: For Synopsis Code DX click New Issue Tracker Credentials button. It will open a window as shown below.</p> <p></p> <p>Step4 : Enter the name, select Issue Tracker type as Synopsis Code DX as shown in the image below.</p> <p></p> <p>Step5: In order to get the more information click here is a hyperlink, it will navigate to the Synopsis Code DX page as shown below.</p> <p></p>"},{"location":"wrike-it-configuration/","title":"Wrike IT Configuration","text":"<p>Step1: Go to the Integrations section in the APIsec platform and select Issue Tracker from the left-side menu.</p> <p>Step2: Select Wrike from the issue tracker dropdown as shown in the image below.</p> <p></p> <p>Step3: For adding Wrike credentials click New Issue Tracker Credentials button. It will open a window as shown below.</p> <p></p> <p>Enter the name, select Issue Tracker type as Wrike and add the Access token. In order to get the access token, click here is a hyperlink, it will navigate to the Wrike account. In the Wrike account, from the left-hand menu select API and create a new API app by entering the name. key section as shown below.</p> <p></p> <p>After creating the App scroll down and create a Permanent access token. Copy the token and add it to the APIsec platform.</p> <p></p> <p>Step4: After adding the token, select the Issue Tracker credentials added in step 3 and it will list the projects and folders from the Wrike account select any project or folder and save to log the vulnerabilities from APISec.</p> <p></p>"}]}